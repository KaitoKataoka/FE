{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/CircleList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Text, Center, List, Title, Loader, Avatar, ScrollArea, Container, Grid } from '@mantine/core';\nimport { fireAuth } from '../firebase.ts';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircleList = ({\n  refreshTrigger\n}) => {\n  _s();\n  const [circles, setCircles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const fetchCircles = async () => {\n    try {\n      var _fireAuth$currentUser, _fireAuth$currentUser2;\n      const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/getcircle?uid=${(_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid}`);\n      const myresponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchcircleid?uid=${(_fireAuth$currentUser2 = fireAuth.currentUser) === null || _fireAuth$currentUser2 === void 0 ? void 0 : _fireAuth$currentUser2.uid}`);\n      if (response.ok && myresponse.ok) {\n        const data = await response.json();\n        console.log('Fetched circles:', data);\n        const fetchedCircles = data || []; // サークルが存在しない場合は空の配列を設定\n\n        const mydata = await myresponse.json();\n        console.log(mydata);\n        const circlesData = await Promise.all(mydata.map(async item => {\n          const myresponse2 = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchcirclename?circleid=${item.circleid}`);\n          const mydata2 = await myresponse2.json();\n          console.log(mydata2);\n          return mydata2.map(circleItem => ({\n            circleid: item.circleid,\n            circlename: circleItem.circlename,\n            creater: circleItem.creater\n          }));\n        }));\n        const flattenedCirclesData = circlesData.flat();\n\n        // circleid を基準に一意のサークルだけを残す\n        const uniqueCircles = [...fetchedCircles, ...flattenedCirclesData].reduce((acc, current) => {\n          if (!acc.some(circle => circle.circleid === current.circleid)) {\n            acc.push(current);\n          }\n          return acc;\n        }, []);\n        setCircles(uniqueCircles);\n        console.log(uniqueCircles);\n      } else {\n        setError('サークルの取得に失敗しました');\n      }\n    } catch (err) {\n      setError('サークルの取得に失敗しました');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCircles();\n  }, [refreshTrigger]); // トリガーが変わるたびに再度取得\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        size: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      order: 2,\n      align: \"center\",\n      mb: \"md\",\n      children: \"\\u30B5\\u30FC\\u30AF\\u30EB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollArea, {\n      style: {\n        height: '15vh',\n        width: '60%'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        spacing: \"sm\",\n        size: \"sm\",\n        mb: \"lg\",\n        center: true,\n        children: circles.map(circle => /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/circle/${circle.circleid}`,\n            style: {\n              textDecoration: 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(Center, {\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                size: 40,\n                radius: \"xl\",\n                mr: \"md\",\n                src: `https://api.adorable.io/avatars/40/${circle.circleid}.png`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                size: \"lg\",\n                weight: 700,\n                color: \"black\",\n                children: circle.circlename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, circle.circleid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(CircleList, \"vJrhJBc8dQ/qnIYpILyAcukpcNY=\");\n_c = CircleList;\nexport default CircleList;\nvar _c;\n$RefreshReg$(_c, \"CircleList\");","map":{"version":3,"names":["React","useEffect","useState","Text","Center","List","Title","Loader","Avatar","ScrollArea","Container","Grid","fireAuth","Link","jsxDEV","_jsxDEV","CircleList","refreshTrigger","_s","circles","setCircles","loading","setLoading","error","setError","fetchCircles","_fireAuth$currentUser","_fireAuth$currentUser2","response","fetch","currentUser","uid","myresponse","ok","data","json","console","log","fetchedCircles","mydata","circlesData","Promise","all","map","item","myresponse2","circleid","mydata2","circleItem","circlename","creater","flattenedCirclesData","flat","uniqueCircles","reduce","acc","current","some","circle","push","err","style","height","children","size","fileName","_jsxFileName","lineNumber","columnNumber","order","align","mb","width","spacing","center","to","textDecoration","radius","mr","src","weight","color","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/CircleList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Text, Center, List, Title, Loader, Avatar, Card, ScrollArea, Container, Grid } from '@mantine/core';\nimport { fireAuth } from '../firebase.ts';\nimport { Link } from 'react-router-dom';\n\ninterface Circle {\n  circleid: string;\n  circlename: string;\n  creater: string;\n}\n\ninterface CircleListProps {\n  refreshTrigger: boolean; // リストを更新するためのトリガー\n}\n\nconst CircleList: React.FC<CircleListProps> = ({ refreshTrigger }) => {\n  const [circles, setCircles] = useState<Circle[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const fetchCircles = async () => {\n    try {\n      const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/getcircle?uid=${fireAuth.currentUser?.uid}`);\n      const myresponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchcircleid?uid=${fireAuth.currentUser?.uid}`);\n\n      if (response.ok && myresponse.ok) {\n        const data = await response.json();\n        console.log('Fetched circles:', data);\n        const fetchedCircles = data || []; // サークルが存在しない場合は空の配列を設定\n\n        const mydata = await myresponse.json();\n        console.log(mydata);\n        const circlesData = await Promise.all(mydata.map(async (item: { circleid: string }) => {\n          const myresponse2 = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchcirclename?circleid=${item.circleid}`);\n          const mydata2 = await myresponse2.json();\n          console.log(mydata2);\n          return mydata2.map((circleItem: any) => ({\n            circleid: item.circleid,\n            circlename: circleItem.circlename,\n            creater: circleItem.creater,\n          }));\n        }));\n        const flattenedCirclesData = circlesData.flat();\n\n        // circleid を基準に一意のサークルだけを残す\n        const uniqueCircles = [...fetchedCircles, ...flattenedCirclesData].reduce((acc: Circle[], current) => {\n          if (!acc.some(circle => circle.circleid === current.circleid)) {\n            acc.push(current);\n          }\n          return acc;\n        }, []);\n\n        setCircles(uniqueCircles);\n        console.log(uniqueCircles);\n      } else {\n        setError('サークルの取得に失敗しました');\n      }\n    } catch (err) {\n      setError('サークルの取得に失敗しました');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchCircles();\n  }, [refreshTrigger]); // トリガーが変わるたびに再度取得\n\n  if (loading) {\n    return (\n      <Center style={{ height: '100vh' }}>\n            <Loader size=\"xl\" />\n          </Center>\n    );\n  }\n\n  return (\n    <Container>\n      <Title order={2} align=\"center\" mb=\"md\">サークル</Title>\n      <ScrollArea style={{ height: '15vh', width: '60%' }}>\n        <List spacing=\"sm\" size=\"sm\" mb=\"lg\" center>\n          {circles.map((circle) => (\n            <Grid key={circle.circleid}>\n              <Link to={`/circle/${circle.circleid}`} style={{ textDecoration: 'none' }}>\n                  <Center>\n                    <Avatar size={40} radius=\"xl\" mr=\"md\" src={`https://api.adorable.io/avatars/40/${circle.circleid}.png`} />\n                    <Text size=\"lg\" weight={700} color='black'>\n                      {circle.circlename}\n                    </Text>\n                  </Center>\n              </Link>\n            </Grid>\n          ))}\n        </List>\n      </ScrollArea>\n      </Container>\n  );\n};\n\nexport default CircleList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}