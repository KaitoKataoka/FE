{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/ReplyList.tsx\";\nimport React, { useState } from 'react';\nimport ReplyLikeButton from './Reply_like.tsx';\nimport { fetchLikedTweets } from './Like_post.tsx';\nimport { fireAuth } from '../firebase.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [replies, setReplies] = useState([]);\nconst [likedTweets, setLikedTweets] = useState([]);\nconst ReplyList = ({\n  tweetId\n}) => {\n  const handleLikeChange = (replyid, isLiked, likeCount) => {\n    setLikedTweets(prev => isLiked ? [...prev, replyid] : prev.filter(id => id !== replyid));\n    setReplies(prevReplies => prevReplies.map(reply => reply.replyid === replyid ? {\n      ...reply,\n      like: likeCount,\n      isLiked\n    } : reply));\n  };\n  const formatDateTime = dateTime => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: reply.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: reply.replycontent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatDateTime(reply.time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Likes: \", reply.like]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReplyLikeButton, {\n        replyid: reply.replyid,\n        initialLike: reply.like,\n        initialIsLiked: reply.isLiked,\n        onLikeChange: handleLikeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, reply.replyid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = ReplyList;\nexport default ReplyList;\nexport const fetchReplies = async () => {\n  try {\n    if (fireAuth.currentUser) {\n      const likedTweetsData = await fetchLikedTweets(fireAuth.currentUser.uid);\n      setLikedTweets(likedTweetsData);\n      const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchreply?tweetid=${Reply.tweetId}`);\n      const data = await response.json();\n      if (data) {\n        const replys = data.map(reply => ({\n          replyid: reply.replyid,\n          tweetid: reply.tweetid,\n          replycontent: reply.replycontent,\n          username: reply.username,\n          time: reply.time,\n          like: reply.like,\n          isLiked: likedTweetsData.includes(reply.replyid)\n        }));\n        setReplies(replys);\n        console.log(\"Replies fetched successfully:\", replys); // Debug log\n      }\n    }\n  } catch (error) {\n    console.error('Error fetching replies:', error);\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"ReplyList\");","map":{"version":3,"names":["React","useState","ReplyLikeButton","fetchLikedTweets","fireAuth","jsxDEV","_jsxDEV","replies","setReplies","likedTweets","setLikedTweets","ReplyList","tweetId","handleLikeChange","replyid","isLiked","likeCount","prev","filter","id","prevReplies","map","reply","like","formatDateTime","dateTime","date","Date","formattedDate","getFullYear","String","getMonth","padStart","getDate","formattedTime","getHours","getMinutes","getSeconds","children","username","fileName","_jsxFileName","lineNumber","columnNumber","replycontent","time","initialLike","initialIsLiked","onLikeChange","_c","fetchReplies","currentUser","likedTweetsData","uid","response","fetch","Reply","data","json","replys","tweetid","includes","console","log","error","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/ReplyList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReplyLikeButton from './Reply_like.tsx';\nimport { fetchLikedTweets } from './Like_post.tsx';\nimport { fireAuth } from '../firebase.ts';\n\ninterface Reply {\n  replyid: string;\n  tweetid: string;\n  replycontent: string;\n  username: string;\n  time: string;\n  like: number;\n  isLiked: boolean;\n}\n\ninterface ReplyListProps {\n  tweetId: string;\n}\n\nconst [replies, setReplies] = useState<Reply[]>([]);\nconst [likedTweets, setLikedTweets] = useState<string[]>([]);\n\nconst ReplyList: React.FC<ReplyListProps> = ({ tweetId }) => {\n\n  const handleLikeChange = (replyid: string, isLiked: boolean, likeCount: number) => {\n    setLikedTweets(prev => isLiked ? [...prev, replyid] : prev.filter(id => id !== replyid));\n    setReplies(prevReplies =>\n      prevReplies.map(reply =>\n        reply.replyid === replyid ? { ...reply, like: likeCount, isLiked } : reply\n      )\n    );\n  };\n\n  const formatDateTime = (dateTime: string) => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n\n  return (\n    <div>\n      {replies.map((reply) => (\n        <div key={reply.replyid}>\n          <p>{reply.username}</p>\n          <p>{reply.replycontent}</p>\n          <p>{formatDateTime(reply.time)}</p>\n          <p>Likes: {reply.like}</p>\n          <ReplyLikeButton\n            replyid={reply.replyid}\n            initialLike={reply.like}\n            initialIsLiked={reply.isLiked}\n            onLikeChange={handleLikeChange}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ReplyList;\n\nexport const fetchReplies = async () => {\n  try {\n    if (fireAuth.currentUser) {\n      const likedTweetsData = await fetchLikedTweets(fireAuth.currentUser.uid);\n      setLikedTweets(likedTweetsData);\n      const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchreply?tweetid=${Reply.tweetId}`);\n      const data = await response.json();\n      if (data) {\n        const replys = data.map((reply: any) => ({\n          replyid: reply.replyid,\n          tweetid: reply.tweetid,\n          replycontent: reply.replycontent,\n          username: reply.username,\n          time: reply.time,\n          like: reply.like,\n          isLiked: likedTweetsData.includes(reply.replyid),\n        }));\n        setReplies(replys);\n        console.log(\"Replies fetched successfully:\", replys); // Debug log\n      }\n    }\n  } catch (error) {\n    console.error('Error fetching replies:', error);\n  }\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAU,EAAE,CAAC;AACnD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAW,EAAE,CAAC;AAE5D,MAAMU,SAAmC,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAE3D,MAAMC,gBAAgB,GAAGA,CAACC,OAAe,EAAEC,OAAgB,EAAEC,SAAiB,KAAK;IACjFN,cAAc,CAACO,IAAI,IAAIF,OAAO,GAAG,CAAC,GAAGE,IAAI,EAAEH,OAAO,CAAC,GAAGG,IAAI,CAACC,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKL,OAAO,CAAC,CAAC;IACxFN,UAAU,CAACY,WAAW,IACpBA,WAAW,CAACC,GAAG,CAACC,KAAK,IACnBA,KAAK,CAACR,OAAO,KAAKA,OAAO,GAAG;MAAE,GAAGQ,KAAK;MAAEC,IAAI,EAAEP,SAAS;MAAED;IAAQ,CAAC,GAAGO,KACvE,CACF,CAAC;EACH,CAAC;EAED,MAAME,cAAc,GAAIC,QAAgB,IAAK;IAC3C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,QAAQ,CAAC;IAC/B,MAAMG,aAAa,GAAG,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,IAAIC,MAAM,CAACJ,IAAI,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,MAAM,CAACJ,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IACxI,MAAME,aAAa,GAAG,GAAGJ,MAAM,CAACJ,IAAI,CAACS,QAAQ,CAAC,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,MAAM,CAACJ,IAAI,CAACU,UAAU,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,MAAM,CAACJ,IAAI,CAACW,UAAU,CAAC,CAAC,CAAC,CAACL,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IAC/J,OAAO,GAAGJ,aAAa,IAAIM,aAAa,EAAE;EAC5C,CAAC;EAED,oBACE5B,OAAA;IAAAgC,QAAA,EACG/B,OAAO,CAACc,GAAG,CAAEC,KAAK,iBACjBhB,OAAA;MAAAgC,QAAA,gBACEhC,OAAA;QAAAgC,QAAA,EAAIhB,KAAK,CAACiB;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBrC,OAAA;QAAAgC,QAAA,EAAIhB,KAAK,CAACsB;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BrC,OAAA;QAAAgC,QAAA,EAAId,cAAc,CAACF,KAAK,CAACuB,IAAI;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnCrC,OAAA;QAAAgC,QAAA,GAAG,SAAO,EAAChB,KAAK,CAACC,IAAI;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BrC,OAAA,CAACJ,eAAe;QACdY,OAAO,EAAEQ,KAAK,CAACR,OAAQ;QACvBgC,WAAW,EAAExB,KAAK,CAACC,IAAK;QACxBwB,cAAc,EAAEzB,KAAK,CAACP,OAAQ;QAC9BiC,YAAY,EAAEnC;MAAiB;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA,GAVMrB,KAAK,CAACR,OAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWlB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACM,EAAA,GApCItC,SAAmC;AAsCzC,eAAeA,SAAS;AAExB,OAAO,MAAMuC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,IAAI9C,QAAQ,CAAC+C,WAAW,EAAE;MACxB,MAAMC,eAAe,GAAG,MAAMjD,gBAAgB,CAACC,QAAQ,CAAC+C,WAAW,CAACE,GAAG,CAAC;MACxE3C,cAAc,CAAC0C,eAAe,CAAC;MAC/B,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAiEC,KAAK,CAAC5C,OAAO,EAAE,CAAC;MAC9G,MAAM6C,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,EAAE;QACR,MAAME,MAAM,GAAGF,IAAI,CAACpC,GAAG,CAAEC,KAAU,KAAM;UACvCR,OAAO,EAAEQ,KAAK,CAACR,OAAO;UACtB8C,OAAO,EAAEtC,KAAK,CAACsC,OAAO;UACtBhB,YAAY,EAAEtB,KAAK,CAACsB,YAAY;UAChCL,QAAQ,EAAEjB,KAAK,CAACiB,QAAQ;UACxBM,IAAI,EAAEvB,KAAK,CAACuB,IAAI;UAChBtB,IAAI,EAAED,KAAK,CAACC,IAAI;UAChBR,OAAO,EAAEqC,eAAe,CAACS,QAAQ,CAACvC,KAAK,CAACR,OAAO;QACjD,CAAC,CAAC,CAAC;QACHN,UAAU,CAACmD,MAAM,CAAC;QAClBG,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEJ,MAAM,CAAC,CAAC,CAAC;MACxD;IACF;EACF,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACjD;AACF,CAAC;AAAC,IAAAf,EAAA;AAAAgB,YAAA,CAAAhB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}