{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/CircleForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Input, Text, Center, Card } from '@mantine/core';\nimport { fireAuth } from '../firebase.ts';\nimport { IconPlus } from '@tabler/icons-react';\nimport { useMediaQuery } from '@mantine/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircleCreateForm = ({\n  onCircleCreated\n}) => {\n  _s();\n  const [circleName, setCircleName] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const isMobile2 = useMediaQuery(`(max-width: ${1050}px)`);\n  const isMobile = useMediaQuery(`(max-width: ${767}px)`);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!circleName) {\n      setError('サークル名を入力してください');\n      return;\n    }\n    try {\n      var _fireAuth$currentUser;\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/postcircle', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          circleName,\n          creater: (_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid\n        })\n      });\n      if (response.ok) {\n        setSuccess('サークルが作成されました');\n        setCircleName('');\n        setError('');\n        onCircleCreated(); // サークルが作成された後に親コンポーネントに通知\n      } else {\n        const result = await response.json();\n        setError(result.message || 'サークルの作成に失敗しました');\n        setSuccess('');\n      }\n    } catch (err) {\n      setError('サークルの作成に失敗しました');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: !showForm ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        onClick: () => setShowForm(true),\n        leftIcon: /*#__PURE__*/_jsxDEV(IconPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 81\n        }, this),\n        sx: {\n          width: isMobile ? '30%' : isMobile2 ? '60%' : '100%'\n        },\n        children: \"\\u30B5\\u30FC\\u30AF\\u30EB\\u3092\\u4F5C\\u6210\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Card, {\n        shadow: \"sm\",\n        p: \"lg\",\n        radius: \"md\",\n        withBorder: true,\n        style: {\n          width: isMobile ? '100px' : isMobile2 ? '140px' : '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\u30B5\\u30FC\\u30AF\\u30EB\\u540D\",\n            value: circleName,\n            onChange: e => setCircleName(e.target.value),\n            mb: \"md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(Text, {\n            color: \"red\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), success && /*#__PURE__*/_jsxDEV(Text, {\n            color: \"green\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            children: \"\\u30B5\\u30FC\\u30AF\\u30EB\\u4F5C\\u6210\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            fullWidth: true,\n            mt: \"md\",\n            onClick: () => setShowForm(false),\n            children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(CircleCreateForm, \"gSVSPTYMLo1Cm7BVwgMQ6F0HEPA=\", false, function () {\n  return [useMediaQuery, useMediaQuery];\n});\n_c = CircleCreateForm;\nexport default CircleCreateForm;\nvar _c;\n$RefreshReg$(_c, \"CircleCreateForm\");","map":{"version":3,"names":["React","useState","Box","Button","Input","Text","Center","Card","fireAuth","IconPlus","useMediaQuery","jsxDEV","_jsxDEV","CircleCreateForm","onCircleCreated","_s","circleName","setCircleName","error","setError","success","setSuccess","showForm","setShowForm","isMobile2","isMobile","handleSubmit","e","preventDefault","_fireAuth$currentUser","response","fetch","method","headers","body","JSON","stringify","creater","currentUser","uid","ok","result","json","message","err","children","variant","onClick","leftIcon","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","shadow","p","radius","withBorder","style","onSubmit","placeholder","value","onChange","target","mb","color","type","fullWidth","mt","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/CircleForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Button, Input, Text, Center, Card } from '@mantine/core';\nimport { fireAuth } from '../firebase.ts';\nimport { IconPlus } from '@tabler/icons-react';\nimport { useMediaQuery } from '@mantine/hooks';\n\ninterface Circle {\n  circleid: string;\n  circlename: string;\n  creater: string;\n}\n\ninterface CircleCreateFormProps {\n  onCircleCreated: () => void;\n}\n\nconst CircleCreateForm: React.FC<CircleCreateFormProps> = ({ onCircleCreated }) => {\n  const [circleName, setCircleName] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const isMobile2 = useMediaQuery(`(max-width: ${1050}px)`);\n  const isMobile = useMediaQuery(`(max-width: ${767}px)`);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!circleName) {\n      setError('サークル名を入力してください');\n      return;\n    }\n\n    try {\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/postcircle', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ circleName, creater: fireAuth.currentUser?.uid }),\n      });\n\n      if (response.ok) {\n        setSuccess('サークルが作成されました');\n        setCircleName('');\n        setError('');\n        onCircleCreated(); // サークルが作成された後に親コンポーネントに通知\n      } else {\n        const result = await response.json();\n        setError(result.message || 'サークルの作成に失敗しました');\n        setSuccess('');\n      }\n    } catch (err) {\n      setError('サークルの作成に失敗しました');\n      setSuccess('');\n    }\n  };\n\n  return (\n    <Center>\n      <Box>\n        {!showForm ? (\n          <Button variant=\"outline\" onClick={() => setShowForm(true)} leftIcon={<IconPlus />} sx={{ width: isMobile ?   '30%':(isMobile2 ?   '60%':'100%')}}>\n            サークルを作成\n          </Button>\n        ) : (\n          <Card shadow=\"sm\" p=\"lg\" radius=\"md\" withBorder style={{ width: isMobile ? '100px':(isMobile2 ?  '140px':'300px')}}>\n            <form onSubmit={handleSubmit}>\n              <Input\n                placeholder=\"サークル名\"\n                value={circleName}\n                onChange={(e) => setCircleName(e.target.value)}\n                mb=\"md\"\n              />\n              {error && <Text color=\"red\">{error}</Text>}\n              {success && <Text color=\"green\">{success}</Text>}\n              <Button type=\"submit\" fullWidth>\n                サークル作成\n              </Button>\n              <Button variant=\"outline\" fullWidth mt=\"md\" onClick={() => setShowForm(false)}>\n                キャンセル\n              </Button>\n            </form>\n          </Card>\n        )}\n      </Box>\n    </Center>\n  );\n};\n\nexport default CircleCreateForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}