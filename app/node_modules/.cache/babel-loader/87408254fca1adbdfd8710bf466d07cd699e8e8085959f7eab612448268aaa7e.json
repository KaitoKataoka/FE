{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/Newpost.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Textarea, Button, Box } from '@mantine/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contentform = props => {\n  _s();\n  const [content, setContent] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await props.onNewPost(content);\n      setContent('');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Textarea, {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"What's happening?\",\n        autosize: true,\n        minRows: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Contentform, \"7qMZGOaOfwYbu+hEA/2Jy8mHHnE=\");\n_c = Contentform;\nexport default Contentform;\nvar _c;\n$RefreshReg$(_c, \"Contentform\");","map":{"version":3,"names":["React","useState","Textarea","Button","Box","jsxDEV","_jsxDEV","Contentform","props","_s","content","setContent","handleSubmit","e","preventDefault","onNewPost","error","console","log","onSubmit","children","mb","value","onChange","target","placeholder","autosize","minRows","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/Newpost.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Textarea, Button, Box } from '@mantine/core';\n\n\n\ninterface NewPostProps {\n  onNewPost: (content: string) => void;\n}\n\nconst Contentform = (props: NewPostProps) =>{\n  const [content, setContent] = useState<string>('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try{\n    await props.onNewPost(content);\n    setContent('');\n    }catch(error){\n      console.log(error)\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box mb=\"md\">\n        <Textarea\n          value={content}\n          onChange={e => setContent(e.target.value)}\n          placeholder=\"What's happening?\"\n          autosize\n          minRows={2}\n        />\n      </Box>\n      <Button type=\"submit\">\n        Post\n      </Button>\n    </form>\n  );\n};\n\nexport default Contentform;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,MAAM,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQtD,MAAMC,WAAW,GAAIC,KAAmB,IAAI;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAElD,MAAMW,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAG;MACH,MAAMN,KAAK,CAACO,SAAS,CAACL,OAAO,CAAC;MAC9BC,UAAU,CAAC,EAAE,CAAC;IACd,CAAC,QAAMK,KAAK,EAAC;MACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACEV,OAAA;IAAMa,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3Bd,OAAA,CAACF,GAAG;MAACiB,EAAE,EAAC,IAAI;MAAAD,QAAA,eACVd,OAAA,CAACJ,QAAQ;QACPoB,KAAK,EAAEZ,OAAQ;QACfa,QAAQ,EAAEV,CAAC,IAAIF,UAAU,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,mBAAmB;QAC/BC,QAAQ;QACRC,OAAO,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA,CAACH,MAAM;MAAC6B,IAAI,EAAC,QAAQ;MAAAZ,QAAA,EAAC;IAEtB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACtB,EAAA,CA7BIF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA+BjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}