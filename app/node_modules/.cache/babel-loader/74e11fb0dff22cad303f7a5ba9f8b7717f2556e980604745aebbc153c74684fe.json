{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/Like_post.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fireAuth } from '../firebase.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LikeButton = ({\n  tweetid,\n  initialLike,\n  initialIsLiked,\n  onLike\n}) => {\n  _s();\n  const [isLiked, setIsLiked] = useState(initialIsLiked);\n  const [likeCount, setLikeCount] = useState(initialLike);\n  useEffect(() => {\n    setIsLiked(initialIsLiked);\n    setLikeCount(initialLike);\n  }, [initialIsLiked, initialLike]);\n  const handleLike = async () => {\n    if (!fireAuth.currentUser) return;\n    try {\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/like', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tweetid,\n          uid: fireAuth.currentUser.uid\n        })\n      });\n      if (response.ok) {\n        setIsLiked(true);\n        setLikeCount(likeCount + 1);\n        onLike(tweetid);\n      }\n    } catch (error) {\n      console.error('Failed to like tweet:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleLike,\n    children: [isLiked ? '❤️' : '♡', \" \", likeCount]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(LikeButton, \"F2PbIoBSNAzqSbhY0V1YZlMtjsY=\");\n_c = LikeButton;\nexport const fetchLikedTweets = async uid => {\n  try {\n    const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/likedTweets?uid=${uid}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Failed to fetch liked tweets:', error);\n    return [];\n  }\n};\nexport default LikeButton;\nvar _c;\n$RefreshReg$(_c, \"LikeButton\");","map":{"version":3,"names":["React","useState","useEffect","fireAuth","jsxDEV","_jsxDEV","LikeButton","tweetid","initialLike","initialIsLiked","onLike","_s","isLiked","setIsLiked","likeCount","setLikeCount","handleLike","currentUser","response","fetch","method","headers","body","JSON","stringify","uid","ok","error","console","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","fetchLikedTweets","data","json","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/Like_post.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fireAuth } from '../firebase.ts';\n\ninterface LikeButtonProps {\n  tweetid: string;\n  initialLike: number;\n  initialIsLiked: boolean;\n  onLike: (tweetid: string) => void;\n}\n\nconst LikeButton: React.FC<LikeButtonProps> = ({ tweetid, initialLike, initialIsLiked, onLike }) => {\n  const [isLiked, setIsLiked] = useState(initialIsLiked);\n  const [likeCount, setLikeCount] = useState(initialLike);\n\n  useEffect(() => {\n    setIsLiked(initialIsLiked);\n    setLikeCount(initialLike);\n  }, [initialIsLiked, initialLike]);\n\n  const handleLike = async () => {\n    if (!fireAuth.currentUser) return;\n\n    try {\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/like', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ tweetid, uid: fireAuth.currentUser.uid }),\n      });\n\n      if (response.ok) {\n        setIsLiked(true);\n        setLikeCount(likeCount + 1);\n        onLike(tweetid);\n      }\n    } catch (error) {\n      console.error('Failed to like tweet:', error);\n    }\n  };\n\n  return (\n    <button onClick={handleLike}>\n      {isLiked ? '❤️' : '♡'} {likeCount}\n    </button>\n  );\n};\n\nexport const fetchLikedTweets = async (uid: string): Promise<string[]> => {\n  try {\n    const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/likedTweets?uid=${uid}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Failed to fetch liked tweets:', error);\n    return [];\n  }\n};\n\nexport default LikeButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1C,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,OAAO;EAAEC,WAAW;EAAEC,cAAc;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClG,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACQ,cAAc,CAAC;EACtD,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACO,WAAW,CAAC;EAEvDN,SAAS,CAAC,MAAM;IACdW,UAAU,CAACJ,cAAc,CAAC;IAC1BM,YAAY,CAACP,WAAW,CAAC;EAC3B,CAAC,EAAE,CAACC,cAAc,EAAED,WAAW,CAAC,CAAC;EAEjC,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACb,QAAQ,CAACc,WAAW,EAAE;IAE3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;QAC7EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjB,OAAO;UAAEkB,GAAG,EAAEtB,QAAQ,CAACc,WAAW,CAACQ;QAAI,CAAC;MACjE,CAAC,CAAC;MAEF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACfb,UAAU,CAAC,IAAI,CAAC;QAChBE,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;QAC3BJ,MAAM,CAACH,OAAO,CAAC;MACjB;IACF,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEtB,OAAA;IAAQwB,OAAO,EAAEb,UAAW;IAAAc,QAAA,GACzBlB,OAAO,GAAG,IAAI,GAAG,GAAG,EAAC,GAAC,EAACE,SAAS;EAAA;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEb,CAAC;AAACvB,EAAA,CApCIL,UAAqC;AAAA6B,EAAA,GAArC7B,UAAqC;AAsC3C,OAAO,MAAM8B,gBAAgB,GAAG,MAAOX,GAAW,IAAwB;EACxE,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,6DAA6DM,GAAG,EAAE,CAAC;IAChG,MAAMY,IAAI,GAAG,MAAMnB,QAAQ,CAACoB,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,EAAE;EACX;AACF,CAAC;AAED,eAAerB,UAAU;AAAC,IAAA6B,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}