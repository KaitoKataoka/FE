{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/Post_App.tsx\",\n  _s = $RefreshSig$();\nimport { fireAuth } from '../firebase.ts';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Contentform from './Newpost.tsx';\nimport { useNavigate } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport \"./Post_App.css\";\nimport defaultAvatar from '../assets/default_user.png';\nimport logo from '../assets/logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Post_App = () => {\n  _s();\n  const [profileData, setProfileData] = useState(null);\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [noResults, setNoResults] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [avatarURL, setAvatarURL] = useState(null);\n  const [defaultuser, setDefaultuser] = useState(defaultAvatar);\n  const [userLoading, setuserLoading] = useState(null);\n  const [allTweets, setAllTweets] = useState([]);\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      if (fireAuth.currentUser) {\n        var _fireAuth$currentUser;\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/search?uid=${(_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid}`);\n        const data = await response.json();\n        console.log(data);\n        if (data && data.length > 0) {\n          setProfileData(data[0]);\n        } else {\n          setProfileData(null);\n        }\n      }\n    };\n    const fetchAvatarURL = async () => {\n      try {\n        var _fireAuth$currentUser2;\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchAvatar?uid=${(_fireAuth$currentUser2 = fireAuth.currentUser) === null || _fireAuth$currentUser2 === void 0 ? void 0 : _fireAuth$currentUser2.uid}`);\n        const data = await response.json();\n        console.log(data.avatar_url);\n        if (data.avatar_url != \"\") {\n          setAvatarURL(`https://hackathon-ro2txyk6rq-uc.a.run.app${data.avatar_url}`);\n          setLoading(false);\n        } else {\n          setAvatarURL(defaultAvatar);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Failed to fetch avatar URL:', error);\n        setLoading(false);\n      }\n    };\n    const fetchFollowedTweets = async () => {\n      try {\n        var _fireAuth$currentUser3;\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchfollow?followuser=${(_fireAuth$currentUser3 = fireAuth.currentUser) === null || _fireAuth$currentUser3 === void 0 ? void 0 : _fireAuth$currentUser3.uid}`);\n        const data = await response.json();\n        if (data) {\n          var _fireAuth$currentUser4;\n          const tweets = [];\n          for (let i = 0; i < data.length; i++) {\n            const tweetsResponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${data[i].followeruid}`);\n            const tweetsData = await tweetsResponse.json();\n            tweets.push(...tweetsData.map(tweet => ({\n              tweetid: tweet.tweetid,\n              username: tweet.username,\n              time: tweet.time,\n              content: tweet.content,\n              like: tweet.like,\n              isLiked: false\n            })));\n          }\n          const myresponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${(_fireAuth$currentUser4 = fireAuth.currentUser) === null || _fireAuth$currentUser4 === void 0 ? void 0 : _fireAuth$currentUser4.uid}`);\n          const mydata = await myresponse.json();\n          if (mydata) {\n            const myTweets = mydata.map(tweet => ({\n              tweetid: tweet.tweetid,\n              username: tweet.username,\n              time: tweet.time,\n              content: tweet.content,\n              like: tweet.like,\n              isLiked: false\n            }));\n            tweets.push(...myTweets);\n          }\n          tweets.sort((a, b) => new Date(b.time).getTime() - new Date(a.time).getTime());\n          setAllTweets(tweets);\n        }\n      } catch (error) {\n        console.error('Failed to fetch followed tweets:', error);\n      }\n      ;\n    };\n    fetchUserProfile();\n    fetchAvatarURL();\n    fetchFollowedTweets();\n  }, []);\n  const debouncedSearch = useCallback(debounce(async query => {\n    if (query.length > 0) {\n      const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchUsers?username=${query}`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setSearchResults(data);\n        setNoResults(false);\n      } else {\n        setSearchResults([]);\n        setNoResults(true);\n      }\n    } else {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, 300), []);\n  useEffect(() => {\n    if (searchTerm === '') {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, [searchTerm]);\n  const createPost = async content => {\n    return new Promise(async (resolve, reject) => {\n      var _fireAuth$currentUser5;\n      const firebaseUID = (_fireAuth$currentUser5 = fireAuth.currentUser) === null || _fireAuth$currentUser5 === void 0 ? void 0 : _fireAuth$currentUser5.uid;\n      let errormessage = \"\";\n      if (!content) {\n        alert(\"tweet is empty\");\n        errormessage = \"tweet is empty\";\n      }\n      if (errormessage) {\n        console.log(errormessage);\n        reject(errormessage);\n        return;\n      }\n      try {\n        const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/post\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: profileData === null || profileData === void 0 ? void 0 : profileData.username,\n            content: content,\n            uid: firebaseUID,\n            like: 0\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error(\"Failed to tweet:\", errorData);\n          alert(\"failed to tweet\");\n          errormessage = \"failed to tweet\";\n          reject(errormessage);\n          return;\n        } else {\n          const newTweet = {\n            tweetid: \"\",\n            username: (profileData === null || profileData === void 0 ? void 0 : profileData.username) || \"\",\n            time: new Date().toISOString(),\n            content: content,\n            like: 0,\n            isLiked: false\n          };\n          setAllTweets(prevTweets => [newTweet, ...prevTweets]);\n          console.log(firebaseUID);\n          resolve();\n        }\n      } catch (error) {\n        console.error(\"failed tweet\", error);\n        alert(\"failed tweet\");\n        reject(error);\n      }\n    });\n  };\n  if (!profileData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 12\n    }, this);\n  }\n  const handleProfileClick = () => {\n    navigate(\"/profile\");\n  };\n  const handleSearch = async e => {\n    const query = e.target.value;\n    setuserLoading(\"loading\");\n    setSearchTerm(query);\n    debouncedSearch(query);\n    setuserLoading(null);\n  };\n  const formatDateTime = dateTime => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n  const handleUserClick = uid => {\n    navigate(`/userProfile/${uid}`);\n  };\n  const handleLikeClick = async tweetId => {\n    try {\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/like', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tweetid: tweetId\n        })\n      });\n      if (response.ok) {\n        setAllTweets(prevTweets => prevTweets.map(tweet => tweet.tweetid === tweetId ? {\n          ...tweet,\n          like: tweet.like + 1,\n          isLiked: true\n        } : tweet));\n      } else {\n        console.error('Failed to like the tweet');\n      }\n    } catch (error) {\n      console.error('Failed to like the tweet:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        style: {\n          width: '200px',\n          height: '150px',\n          cursor: 'pointer',\n          borderRadius: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), userLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30CD\\u30FC\\u30E0\\u3092\\u691C\\u7D22\",\n      value: searchTerm,\n      onChange: handleSearch,\n      style: {\n        width: '50%',\n        margin: '0 auto',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [searchResults.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleUserClick(user.uid),\n        style: {\n          cursor: 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatarURL || defaultAvatar,\n            alt: \"Profile\",\n            onClick: handleProfileClick,\n            style: {\n              width: '100px',\n              height: '100px',\n              cursor: 'pointer',\n              borderRadius: '50%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 14\n          }, this), user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, user.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)), noResults && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u7121\\u3057\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u30DD\\u30B9\\u30C8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: allTweets && allTweets.map((tweet, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: tweet.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDateTime(tweet.time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tweet.like\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLikeClick(tweet.tweetid),\n              children: tweet.isLiked ? '❤️' : '♡'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatarURL || defaultAvatar,\n        alt: \"Profile\",\n        onClick: handleProfileClick,\n        style: {\n          width: '100px',\n          height: '100px',\n          cursor: 'pointer',\n          borderRadius: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contentform, {\n      onNewPost: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(Post_App, \"vL9pCYJEPNUKKwtDsK33Gs+jrRo=\", false, function () {\n  return [useNavigate];\n});\n_c = Post_App;\nexport default Post_App;\nvar _c;\n$RefreshReg$(_c, \"Post_App\");","map":{"version":3,"names":["fireAuth","React","useState","useEffect","useCallback","Contentform","useNavigate","debounce","defaultAvatar","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","Post_App","_s","profileData","setProfileData","navigate","searchTerm","setSearchTerm","searchResults","setSearchResults","noResults","setNoResults","loading","setLoading","avatarURL","setAvatarURL","defaultuser","setDefaultuser","userLoading","setuserLoading","allTweets","setAllTweets","fetchUserProfile","currentUser","_fireAuth$currentUser","response","fetch","uid","data","json","console","log","length","fetchAvatarURL","_fireAuth$currentUser2","avatar_url","error","fetchFollowedTweets","_fireAuth$currentUser3","_fireAuth$currentUser4","tweets","i","tweetsResponse","followeruid","tweetsData","push","map","tweet","tweetid","username","time","content","like","isLiked","myresponse","mydata","myTweets","sort","a","b","Date","getTime","debouncedSearch","query","createPost","Promise","resolve","reject","_fireAuth$currentUser5","firebaseUID","errormessage","alert","method","headers","body","JSON","stringify","ok","errorData","newTweet","toISOString","prevTweets","children","fileName","_jsxFileName","lineNumber","columnNumber","handleProfileClick","handleSearch","e","target","value","formatDateTime","dateTime","date","formattedDate","getFullYear","String","getMonth","padStart","getDate","formattedTime","getHours","getMinutes","getSeconds","handleUserClick","handleLikeClick","tweetId","src","style","width","height","cursor","borderRadius","type","placeholder","onChange","margin","display","user","onClick","alt","index","className","onNewPost","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/Post_App.tsx"],"sourcesContent":["import { fireAuth } from '../firebase.ts';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Contentform from './Newpost.tsx';\nimport { Link, useNavigate } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport \"./Post_App.css\"\nimport defaultAvatar from '../assets/default_user.png';\nimport logo from '../assets/logo.png'\n\ninterface Tweet {\n  tweetid: string;\n  username: string;\n  time: string;\n  content: string;\n  like: number;\n  isLiked: boolean;\n}\n\nconst Post_App: React.FC = () => {\n  const [profileData, setProfileData] = useState<{ name: string; age: number; username: string; avatar_url: string;} | null>(null);\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<any[]>([]);\n  const [noResults, setNoResults] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [avatarURL, setAvatarURL] = useState<string | null>(null);\n  const [defaultuser, setDefaultuser] = useState<string | null>(defaultAvatar);\n  const [userLoading, setuserLoading] = useState<string | null>(null);\n  const [allTweets, setAllTweets] = useState<Tweet[]>([]);\n\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      if (fireAuth.currentUser) {\n        const response = await fetch(\n          `https://hackathon-ro2txyk6rq-uc.a.run.app/search?uid=${fireAuth.currentUser?.uid}`\n        );\n        const data = await response.json();\n        console.log(data);\n        if (data && data.length > 0) {\n          setProfileData(data[0]);\n        } else {\n          setProfileData(null);\n        }\n      }\n    };\n\n    const fetchAvatarURL = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchAvatar?uid=${fireAuth.currentUser?.uid}`);\n        const data = await response.json();\n        console.log(data.avatar_url)\n        if (data.avatar_url != \"\"){\n        setAvatarURL(`https://hackathon-ro2txyk6rq-uc.a.run.app${data.avatar_url}`);\n        setLoading(false);\n        }else{\n        setAvatarURL(defaultAvatar);\n        setLoading(false);\n        }\n      } catch (error) {\n        console.error('Failed to fetch avatar URL:', error);\n        setLoading(false);\n      }\n    };\n      const fetchFollowedTweets = async () => {\n        try {\n          const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchfollow?followuser=${fireAuth.currentUser?.uid}`);\n          const data = await response.json();\n          if (data) {\n            const tweets: Tweet[] = [];\n            for (let i = 0; i < data.length; i++) {\n              const tweetsResponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${data[i].followeruid}`);\n              const tweetsData = await tweetsResponse.json();\n              tweets.push(...tweetsData.map((tweet: any) => ({\n                tweetid: tweet.tweetid,\n                username: tweet.username,\n                time: tweet.time,\n                content: tweet.content,\n                like: tweet.like,\n                isLiked: false,\n              })));\n            }\n            const myresponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${fireAuth.currentUser?.uid}`);\n            const mydata = await myresponse.json();\n            if (mydata) {\n              const myTweets = mydata.map((tweet: any) => ({\n                tweetid: tweet.tweetid,\n              username: tweet.username,\n              time: tweet.time,\n              content: tweet.content,\n              like: tweet.like,\n              isLiked: false,\n            }));\n            tweets.push(...myTweets);\n          }\n            tweets.sort((a, b) => new Date(b.time).getTime() - new Date(a.time).getTime());\n            setAllTweets(tweets);\n          }\n        }catch (error) {\n        console.error('Failed to fetch followed tweets:', error);\n      };\n    };\n\n\n    fetchUserProfile();\n    fetchAvatarURL();\n    fetchFollowedTweets();\n  }, []);\n\n\n\n  const debouncedSearch = useCallback(debounce(async (query: string) => {\n    if (query.length > 0) {\n      const response = await fetch(\n        `https://hackathon-ro2txyk6rq-uc.a.run.app/searchUsers?username=${query}`\n      );\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setSearchResults(data);\n        setNoResults(false);\n      } else {\n        setSearchResults([]);\n        setNoResults(true);\n      }\n    } else {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, 300), []);\n\n  useEffect(() => {\n    if (searchTerm === '') {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, [searchTerm]);\n\n  const createPost = async (content: string) => {\n    return new Promise<void>(async (resolve, reject) => {\n      const firebaseUID = fireAuth.currentUser?.uid;\n      let errormessage = \"\";\n      if (!content) {\n        alert(\"tweet is empty\");\n        errormessage = \"tweet is empty\";\n      }\n      if (errormessage) {\n        console.log(errormessage);\n        reject(errormessage);\n        return;\n      }\n      try {\n        const response = await fetch(\n          \"https://hackathon-ro2txyk6rq-uc.a.run.app/post\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              username: profileData?.username,\n              content: content,\n              uid: firebaseUID,\n              like: 0,\n            }),\n          }\n        );\n        if (!response.ok) {\n          const errorData = await response.json();\n        console.error(\"Failed to tweet:\", errorData);\n          alert(\"failed to tweet\");\n          errormessage = \"failed to tweet\";\n          reject(errormessage);\n          return;\n        } else {\n          const newTweet = {\n            tweetid: \"\",\n            username: profileData?.username || \"\",\n            time: new Date().toISOString(),\n            content: content,\n            like: 0,\n            isLiked: false,\n          };\n          setAllTweets(prevTweets => [newTweet, ...prevTweets]);\n          console.log(firebaseUID);\n          resolve();\n        }\n      } catch (error) {\n        console.error(\"failed tweet\", error);\n        alert(\"failed tweet\");\n        reject(error);\n      }\n    });\n  };\n\n  if (!profileData) {\n    return <div>Loading...</div>;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const handleProfileClick = () => {\n    navigate(\"/profile\");\n  };\n\n\n  const handleSearch = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const query = e.target.value;\n    setuserLoading(\"loading\");\n    setSearchTerm(query);\n    debouncedSearch(query);\n    setuserLoading(null);\n  };\n\n  const formatDateTime = (dateTime: string) => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n\n  const handleUserClick = (uid: string) => {\n    navigate(`/userProfile/${uid}`);\n  };\n\n  const handleLikeClick = async (tweetId: string) => {\n    try {\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/like', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ tweetid: tweetId }),\n      });\n\n      if (response.ok) {\n        setAllTweets(prevTweets =>\n          prevTweets.map(tweet =>\n            tweet.tweetid === tweetId ? { ...tweet, like: tweet.like + 1, isLiked: true } : tweet\n          )\n        );\n      } else {\n        console.error('Failed to like the tweet');\n      }\n    } catch (error) {\n      console.error('Failed to like the tweet:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1><img src = {logo} style={{ width: '200px', height: '150px', cursor: 'pointer', borderRadius: '50%' }}/> </h1>\n      {userLoading ? (\n        <div>loading...</div>\n        ) : (\n        <></>\n      )}\n      <input\n        type=\"text\"\n        placeholder=\"ユーザーネームを検索\"\n        value={searchTerm}\n        onChange={handleSearch}\n        style={{ width: '50%', margin: '0 auto', display: 'block' }}\n      />\n      <div>\n        {searchResults.map(user => (\n          <div key={user.uid} onClick={() => handleUserClick(user.uid)} style={{ cursor: 'pointer' }}>\n          <p><img src={avatarURL || defaultAvatar} alt=\"Profile\" onClick={handleProfileClick} style={{ width: '100px', height: '100px', cursor: 'pointer', borderRadius: '50%' }} />{user.username}</p>\n        </div>\n        ))}\n        {noResults && <p>該当無し</p>}\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>ポスト</th>\n          </tr>\n        </thead>\n        <tbody>\n          {allTweets && allTweets.map((tweet: Tweet, index: number) => (\n            <tr key={index}>\n              <td>{tweet.username}</td>\n              <td>{formatDateTime(tweet.time)}</td>\n              <td>{tweet.content}</td>\n              <td>{tweet.like}</td>\n              <td>\n                <button onClick={() => handleLikeClick(tweet.tweetid)}>\n                  {tweet.isLiked ? '❤️' : '♡'}\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"sidebar\">\n      <img src={avatarURL || defaultAvatar} alt=\"Profile\" onClick={handleProfileClick} style={{ width: '100px', height: '100px', cursor: 'pointer', borderRadius: '50%' }} />\n      </div>\n      <Contentform onNewPost={createPost} />\n    </div>\n  );\n};\n\n\nexport default Post_App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}