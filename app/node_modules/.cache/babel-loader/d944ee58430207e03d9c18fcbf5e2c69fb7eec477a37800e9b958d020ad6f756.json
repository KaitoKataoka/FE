{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/Post_App.tsx\",\n  _s = $RefreshSig$();\nimport { fireAuth } from '../firebase.ts';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Contentform from './Newpost.tsx';\nimport { useNavigate } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport \"./Post_App.css\";\nimport defaultAvatar from '../assets/default_user.png';\nimport logo from '../assets/logo.png';\nimport LikeButton, { fetchLikedTweets } from './Like_post.tsx';\nimport ReplyList from './ReplyList.tsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Post_App = () => {\n  _s();\n  const [profileData, setProfileData] = useState(null);\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [noResults, setNoResults] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [avatarURL, setAvatarURL] = useState(null);\n  const [userLoading, setuserLoading] = useState(null);\n  const [allTweets, setAllTweets] = useState([]);\n  const [likedTweets, setLikedTweets] = useState([]);\n  const [tweetsLoading, setTweetsLoading] = useState(true);\n  const [showReplyForm, setShowReplyForm] = useState(null);\n  const [replyContent, setReplyContent] = useState('');\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      if (fireAuth.currentUser) {\n        var _fireAuth$currentUser;\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/search?uid=${(_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid}`);\n        const data = await response.json();\n        if (data && data.length > 0) {\n          setProfileData(data[0]);\n        } else {\n          setProfileData(null);\n        }\n      }\n    };\n    const fetchAvatarURL = async () => {\n      try {\n        var _fireAuth$currentUser2;\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchAvatar?uid=${(_fireAuth$currentUser2 = fireAuth.currentUser) === null || _fireAuth$currentUser2 === void 0 ? void 0 : _fireAuth$currentUser2.uid}`);\n        const data = await response.json();\n        if (data.avatar_url !== \"\") {\n          setAvatarURL(`https://hackathon-ro2txyk6rq-uc.a.run.app${data.avatar_url}`);\n        } else {\n          setAvatarURL(defaultAvatar);\n        }\n      } catch (error) {\n        console.error('Failed to fetch avatar URL:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const fetchFollowedTweets = async () => {\n      try {\n        setTweetsLoading(true);\n        if (fireAuth.currentUser) {\n          var _fireAuth$currentUser3;\n          const likedTweetsData = await fetchLikedTweets(fireAuth.currentUser.uid);\n          setLikedTweets(likedTweetsData);\n          const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchfollow?followuser=${(_fireAuth$currentUser3 = fireAuth.currentUser) === null || _fireAuth$currentUser3 === void 0 ? void 0 : _fireAuth$currentUser3.uid}`);\n          const data = await response.json();\n          if (data) {\n            var _fireAuth$currentUser4;\n            const tweets = [];\n            for (let i = 0; i < data.length; i++) {\n              const tweetsResponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${data[i].followeruid}`);\n              const tweetsData = await tweetsResponse.json();\n              tweets.push(...tweetsData.map(tweet => ({\n                tweetid: tweet.tweetid,\n                username: tweet.username,\n                time: tweet.time,\n                content: tweet.content,\n                like: tweet.like,\n                isLiked: likedTweetsData.includes(tweet.tweetid)\n              })));\n            }\n            const myresponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${(_fireAuth$currentUser4 = fireAuth.currentUser) === null || _fireAuth$currentUser4 === void 0 ? void 0 : _fireAuth$currentUser4.uid}`);\n            const mydata = await myresponse.json();\n            if (mydata) {\n              const myTweets = mydata.map(tweet => ({\n                tweetid: tweet.tweetid,\n                username: tweet.username,\n                time: tweet.time,\n                content: tweet.content,\n                like: tweet.like,\n                isLiked: likedTweetsData.includes(tweet.tweetid)\n              }));\n              tweets.push(...myTweets);\n            }\n            tweets.sort((a, b) => new Date(b.time).getTime() - new Date(a.time).getTime());\n            setAllTweets(tweets);\n          }\n        }\n      } catch (error) {\n        console.error('Failed to fetch followed tweets:', error);\n      } finally {\n        setTweetsLoading(false); // ツイートの読み込み終了\n      }\n    };\n    fetchUserProfile();\n    fetchAvatarURL();\n    fetchFollowedTweets();\n  }, []);\n  const handleLikeChange = (tweetid, isLiked, likeCount) => {\n    setLikedTweets(prev => isLiked ? [...prev, tweetid] : prev.filter(id => id !== tweetid));\n    setAllTweets(prevTweets => prevTweets.map(tweet => tweet.tweetid === tweetid ? {\n      ...tweet,\n      like: likeCount,\n      isLiked\n    } : tweet));\n  };\n  const debouncedSearch = useCallback(debounce(async query => {\n    if (query.length > 0) {\n      const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchUsers?username=${query}`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setSearchResults(data);\n        setNoResults(false);\n      } else {\n        setSearchResults([]);\n        setNoResults(true);\n      }\n    } else {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, 300), []);\n  useEffect(() => {\n    if (searchTerm === '') {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, [searchTerm]);\n  const createPost = async content => {\n    return new Promise(async (resolve, reject) => {\n      var _fireAuth$currentUser5;\n      const firebaseUID = (_fireAuth$currentUser5 = fireAuth.currentUser) === null || _fireAuth$currentUser5 === void 0 ? void 0 : _fireAuth$currentUser5.uid;\n      let errormessage = \"\";\n      if (!content) {\n        alert(\"tweet is empty\");\n        errormessage = \"tweet is empty\";\n      }\n      if (errormessage) {\n        console.log(errormessage);\n        reject(errormessage);\n        return;\n      }\n      try {\n        const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/post\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: profileData === null || profileData === void 0 ? void 0 : profileData.username,\n            content: content,\n            uid: firebaseUID,\n            like: 0\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error(\"Failed to tweet:\", errorData);\n          alert(\"failed to tweet\");\n          errormessage = \"failed to tweet\";\n          reject(errormessage);\n          return;\n        } else {\n          const newTweet = {\n            tweetid: \"\",\n            username: (profileData === null || profileData === void 0 ? void 0 : profileData.username) || \"\",\n            time: new Date().toISOString(),\n            content: content,\n            like: 0,\n            isLiked: false,\n            replyCount: 0\n          };\n          setAllTweets(prevTweets => [newTweet, ...prevTweets]);\n          resolve();\n        }\n      } catch (error) {\n        console.error(\"failed tweet\", error);\n        alert(\"failed tweet\");\n        reject(error);\n      }\n    });\n  };\n  if (!profileData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 12\n    }, this);\n  }\n  const handleProfileClick = () => {\n    navigate(\"/profile\");\n  };\n  const handleSearch = async e => {\n    const query = e.target.value;\n    setuserLoading(\"loading\");\n    setSearchTerm(query);\n    debouncedSearch(query);\n    setuserLoading(null);\n  };\n  const formatDateTime = dateTime => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n  const handleUserClick = uid => {\n    navigate(`/userProfile/${uid}`);\n  };\n  const handleReplySubmit = async tweetId => {\n    var _fireAuth$currentUser6;\n    if (replyContent.trim() === \"\") {\n      alert(\"返信内容を入力してください\");\n      return;\n    }\n    const reply = {\n      replycontent: replyContent,\n      uid: (_fireAuth$currentUser6 = fireAuth.currentUser) === null || _fireAuth$currentUser6 === void 0 ? void 0 : _fireAuth$currentUser6.uid,\n      tweetid: tweetId,\n      username: profileData === null || profileData === void 0 ? void 0 : profileData.username\n    };\n    try {\n      const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/reply\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(reply)\n      });\n      if (response.ok) {\n        setReplyContent('');\n        setShowReplyForm(null);\n        // 返信が成功したら、リストを更新\n        const updatedTweets = allTweets.map(tweet => {\n          if (tweet.tweetid === tweetId) {\n            return {\n              ...tweet,\n              replyCount: (tweet.replyCount || 0) + 1\n            };\n          }\n          return tweet;\n        });\n        setAllTweets(updatedTweets);\n      }\n    } catch (error) {\n      console.error('Failed to post reply:', error);\n    }\n  };\n  const handleReplyButtonClick = tweetId => {\n    setShowReplyForm(tweetId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        style: {\n          width: '200px',\n          height: '150px',\n          cursor: 'pointer',\n          borderRadius: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), userLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30CD\\u30FC\\u30E0\\u3092\\u691C\\u7D22\",\n      value: searchTerm,\n      onChange: handleSearch,\n      style: {\n        width: '50%',\n        margin: '0 auto',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [searchResults.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleUserClick(user.uid),\n        style: {\n          cursor: 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: defaultAvatar,\n            alt: \"Profile\",\n            onClick: handleProfileClick,\n            style: {\n              width: '100px',\n              height: '100px',\n              cursor: 'pointer',\n              borderRadius: '50%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 16\n          }, this), user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)\n      }, user.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this)), noResults && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u7121\\u3057\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u30DD\\u30B9\\u30C8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tweetsLoading ?\n        /*#__PURE__*/\n        // ツイートが読み込み中かどうかをチェック\n        _jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 4,\n            style: {\n              textAlign: 'center'\n            },\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this) : allTweets && allTweets.map((tweet, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: tweet.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDateTime(tweet.time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(LikeButton, {\n              tweetid: tweet.tweetid,\n              initialLike: tweet.like,\n              initialIsLiked: tweet.isLiked,\n              onLikeChange: handleLikeChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReplyButtonClick(tweet.tweetid),\n              children: \"\\u8FD4\\u4FE1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: showReplyForm === tweet.tweetid && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: replyContent,\n                onChange: e => setReplyContent(e.target.value),\n                placeholder: \"\\u8FD4\\u4FE1\\u5185\\u5BB9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleReplySubmit(tweet.tweetid),\n                children: \"\\u8FD4\\u4FE1\\u3092\\u6295\\u7A3F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(ReplyList, {\n              tweetId: tweet.tweetid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatarURL || defaultAvatar,\n        alt: \"Profile\",\n        onClick: handleProfileClick,\n        style: {\n          width: '100px',\n          height: '100px',\n          cursor: 'pointer',\n          borderRadius: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contentform, {\n      onNewPost: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s(Post_App, \"4N2+xcfaMBvbAhqd2wGbx2y0Yws=\", false, function () {\n  return [useNavigate];\n});\n_c = Post_App;\nexport default Post_App;\nvar _c;\n$RefreshReg$(_c, \"Post_App\");","map":{"version":3,"names":["fireAuth","React","useState","useEffect","useCallback","Contentform","useNavigate","debounce","defaultAvatar","logo","LikeButton","fetchLikedTweets","ReplyList","jsxDEV","_jsxDEV","Fragment","_Fragment","Post_App","_s","profileData","setProfileData","navigate","searchTerm","setSearchTerm","searchResults","setSearchResults","noResults","setNoResults","loading","setLoading","avatarURL","setAvatarURL","userLoading","setuserLoading","allTweets","setAllTweets","likedTweets","setLikedTweets","tweetsLoading","setTweetsLoading","showReplyForm","setShowReplyForm","replyContent","setReplyContent","fetchUserProfile","currentUser","_fireAuth$currentUser","response","fetch","uid","data","json","length","fetchAvatarURL","_fireAuth$currentUser2","avatar_url","error","console","fetchFollowedTweets","_fireAuth$currentUser3","likedTweetsData","_fireAuth$currentUser4","tweets","i","tweetsResponse","followeruid","tweetsData","push","map","tweet","tweetid","username","time","content","like","isLiked","includes","myresponse","mydata","myTweets","sort","a","b","Date","getTime","handleLikeChange","likeCount","prev","filter","id","prevTweets","debouncedSearch","query","createPost","Promise","resolve","reject","_fireAuth$currentUser5","firebaseUID","errormessage","alert","log","method","headers","body","JSON","stringify","ok","errorData","newTweet","toISOString","replyCount","children","fileName","_jsxFileName","lineNumber","columnNumber","handleProfileClick","handleSearch","e","target","value","formatDateTime","dateTime","date","formattedDate","getFullYear","String","getMonth","padStart","getDate","formattedTime","getHours","getMinutes","getSeconds","handleUserClick","handleReplySubmit","tweetId","_fireAuth$currentUser6","trim","reply","replycontent","updatedTweets","handleReplyButtonClick","src","style","width","height","cursor","borderRadius","type","placeholder","onChange","margin","display","user","onClick","alt","colSpan","textAlign","index","initialLike","initialIsLiked","onLikeChange","className","onNewPost","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/Post_App.tsx"],"sourcesContent":["import { fireAuth } from '../firebase.ts';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Contentform from './Newpost.tsx';\nimport { useNavigate } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport \"./Post_App.css\";\nimport defaultAvatar from '../assets/default_user.png';\nimport logo from '../assets/logo.png';\nimport LikeButton, { fetchLikedTweets } from './Like_post.tsx';\nimport ReplyList from './ReplyList.tsx';\n\ninterface Tweet {\n  tweetid: string;\n  username: string;\n  time: string;\n  content: string;\n  like: number;\n  isLiked: boolean;\n  replyCount: number;\n}\n\nconst Post_App: React.FC = () => {\n  const [profileData, setProfileData] = useState<{ name: string; age: number; username: string; avatar_url: string;} | null>(null);\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<any[]>([]);\n  const [noResults, setNoResults] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [avatarURL, setAvatarURL] = useState<string | null>(null);\n  const [userLoading, setuserLoading] = useState<string | null>(null);\n  const [allTweets, setAllTweets] = useState<Tweet[]>([]);\n  const [likedTweets, setLikedTweets] = useState<string[]>([]);\n  const [tweetsLoading, setTweetsLoading] = useState<boolean>(true);\n  const [showReplyForm, setShowReplyForm] = useState<string | null>(null);\n  const [replyContent, setReplyContent] = useState<string>('');\n\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      if (fireAuth.currentUser) {\n        const response = await fetch(\n          `https://hackathon-ro2txyk6rq-uc.a.run.app/search?uid=${fireAuth.currentUser?.uid}`\n        );\n        const data = await response.json();\n        if (data && data.length > 0) {\n          setProfileData(data[0]);\n        } else {\n          setProfileData(null);\n        }\n      }\n    };\n\n    const fetchAvatarURL = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchAvatar?uid=${fireAuth.currentUser?.uid}`);\n        const data = await response.json();\n        if (data.avatar_url !== \"\"){\n          setAvatarURL(`https://hackathon-ro2txyk6rq-uc.a.run.app${data.avatar_url}`);\n        } else {\n          setAvatarURL(defaultAvatar);\n        }\n      } catch (error) {\n        console.error('Failed to fetch avatar URL:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchFollowedTweets = async () => {\n      try {\n        setTweetsLoading(true);\n        if (fireAuth.currentUser) {\n          const likedTweetsData = await fetchLikedTweets(fireAuth.currentUser.uid);\n          setLikedTweets(likedTweetsData);\n\n          const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchfollow?followuser=${fireAuth.currentUser?.uid}`);\n          const data = await response.json();\n          if (data) {\n            const tweets: Tweet[] = [];\n            for (let i = 0; i < data.length; i++) {\n              const tweetsResponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${data[i].followeruid}`);\n              const tweetsData = await tweetsResponse.json();\n              tweets.push(...tweetsData.map((tweet: any) => ({\n                tweetid: tweet.tweetid,\n                username: tweet.username,\n                time: tweet.time,\n                content: tweet.content,\n                like: tweet.like,\n                isLiked: likedTweetsData.includes(tweet.tweetid),\n              })));\n            }\n            const myresponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${fireAuth.currentUser?.uid}`);\n            const mydata = await myresponse.json();\n            if (mydata) {\n              const myTweets = mydata.map((tweet: any) => ({\n                tweetid: tweet.tweetid,\n                username: tweet.username,\n                time: tweet.time,\n                content: tweet.content,\n                like: tweet.like,\n                isLiked: likedTweetsData.includes(tweet.tweetid),\n              }));\n              tweets.push(...myTweets);\n            }\n            tweets.sort((a, b) => new Date(b.time).getTime() - new Date(a.time).getTime());\n            setAllTweets(tweets);\n          }\n        }\n      } catch (error) {\n        console.error('Failed to fetch followed tweets:', error);\n      }finally {\n        setTweetsLoading(false); // ツイートの読み込み終了\n      }\n    };\n\n    fetchUserProfile();\n    fetchAvatarURL();\n    fetchFollowedTweets();\n  }, []);\n\n  const handleLikeChange = (tweetid: string, isLiked: boolean, likeCount: number) => {\n    setLikedTweets(prev => isLiked ? [...prev, tweetid] : prev.filter(id => id !== tweetid));\n    setAllTweets(prevTweets =>\n      prevTweets.map(tweet =>\n        tweet.tweetid === tweetid ? { ...tweet, like: likeCount, isLiked } : tweet\n      )\n    );\n  };\n\n  const debouncedSearch = useCallback(debounce(async (query: string) => {\n    if (query.length > 0) {\n      const response = await fetch(\n        `https://hackathon-ro2txyk6rq-uc.a.run.app/searchUsers?username=${query}`\n      );\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setSearchResults(data);\n        setNoResults(false);\n      } else {\n        setSearchResults([]);\n        setNoResults(true);\n      }\n    } else {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, 300), []);\n\n  useEffect(() => {\n    if (searchTerm === '') {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, [searchTerm]);\n\n  const createPost = async (content: string) => {\n    return new Promise<void>(async (resolve, reject) => {\n      const firebaseUID = fireAuth.currentUser?.uid;\n      let errormessage = \"\";\n      if (!content) {\n        alert(\"tweet is empty\");\n        errormessage = \"tweet is empty\";\n      }\n      if (errormessage) {\n        console.log(errormessage);\n        reject(errormessage);\n        return;\n      }\n      try {\n        const response = await fetch(\n          \"https://hackathon-ro2txyk6rq-uc.a.run.app/post\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              username: profileData?.username,\n              content: content,\n              uid: firebaseUID,\n              like: 0,\n            }),\n          }\n        );\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error(\"Failed to tweet:\", errorData);\n          alert(\"failed to tweet\");\n          errormessage = \"failed to tweet\";\n          reject(errormessage);\n          return;\n        } else {\n          const newTweet = {\n            tweetid: \"\",\n            username: profileData?.username || \"\",\n            time: new Date().toISOString(),\n            content: content,\n            like: 0,\n            isLiked: false,\n            replyCount: 0,\n          };\n          setAllTweets(prevTweets => [newTweet, ...prevTweets]);\n          resolve();\n        }\n      } catch (error) {\n        console.error(\"failed tweet\", error);\n        alert(\"failed tweet\");\n        reject(error);\n      }\n    });\n  };\n\n  if (!profileData) {\n    return <div>Loading...</div>;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const handleProfileClick = () => {\n    navigate(\"/profile\");\n  };\n\n  const handleSearch = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const query = e.target.value;\n    setuserLoading(\"loading\");\n    setSearchTerm(query);\n    debouncedSearch(query);\n    setuserLoading(null);\n  };\n\n  const formatDateTime = (dateTime: string) => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n\n  const handleUserClick = (uid: string) => {\n    navigate(`/userProfile/${uid}`);\n  };\n\n  const handleReplySubmit = async (tweetId: string) => {\n    if (replyContent.trim() === \"\") {\n      alert(\"返信内容を入力してください\");\n      return;\n    }\n\n    const reply = {\n      replycontent: replyContent,\n      uid: fireAuth.currentUser?.uid,\n      tweetid: tweetId,\n      username: profileData?.username,\n    };\n\n    try {\n      const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/reply\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(reply),\n      });\n\n      if (response.ok) {\n        setReplyContent('');\n        setShowReplyForm(null);\n        // 返信が成功したら、リストを更新\n        const updatedTweets = allTweets.map((tweet) => {\n          if (tweet.tweetid === tweetId) {\n            return { ...tweet, replyCount: (tweet.replyCount || 0) + 1 };\n          }\n          return tweet;\n        });\n        setAllTweets(updatedTweets);\n      }\n    } catch (error) {\n      console.error('Failed to post reply:', error);\n    }\n  };\n\n  const handleReplyButtonClick = (tweetId: string) => {\n    setShowReplyForm(tweetId);\n  };\n\n  return (\n    <div>\n      <h1><img src={logo} style={{ width: '200px', height: '150px', cursor: 'pointer', borderRadius: '50%' }} /></h1>\n      {userLoading ? (\n        <div>loading...</div>\n      ) : (\n        <></>\n      )}\n      <input\n        type=\"text\"\n        placeholder=\"ユーザーネームを検索\"\n        value={searchTerm}\n        onChange={handleSearch}\n        style={{ width: '50%', margin: '0 auto', display: 'block' }}\n      />\n      <div>\n        {searchResults.map(user => (\n          <div key={user.uid} onClick={() => handleUserClick(user.uid)} style={{ cursor: 'pointer' }}>\n            <p><img src={defaultAvatar} alt=\"Profile\" onClick={handleProfileClick} style={{ width: '100px', height: '100px', cursor: 'pointer', borderRadius: '50%' }} />{user.username}</p>\n          </div>\n        ))}\n        {noResults && <p>該当無し</p>}\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>ポスト</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tweetsLoading ? ( // ツイートが読み込み中かどうかをチェック\n            <tr>\n              <td colSpan={4} style={{ textAlign: 'center' }}>Loading...</td>\n            </tr>\n          ) : (\n            allTweets && allTweets.map((tweet: Tweet, index: number) => (\n              <tr key={index}>\n                <td>{tweet.username}</td>\n                <td>{formatDateTime(tweet.time)}</td>\n                <td>{tweet.content}</td>\n                <td>\n                  <LikeButton\n                    tweetid={tweet.tweetid}\n                    initialLike={tweet.like}\n                    initialIsLiked={tweet.isLiked}\n                    onLikeChange={handleLikeChange}\n                  />\n                </td>\n                <td>\n                  <button onClick={() => handleReplyButtonClick(tweet.tweetid)}>返信</button>\n                </td>\n                <td>\n                  {showReplyForm === tweet.tweetid && (\n                    <div>\n                      <textarea\n                        value={replyContent}\n                        onChange={(e) => setReplyContent(e.target.value)}\n                        placeholder=\"返信内容を入力してください\"\n                      />\n                      <button onClick={() => handleReplySubmit(tweet.tweetid)}>返信を投稿</button>\n                    </div>\n                  )}\n                </td>\n                <td>\n                  <ReplyList tweetId={tweet.tweetid} />\n                </td>{/* 返信機能を追加 */}\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n      <div className=\"sidebar\">\n        <img src={avatarURL || defaultAvatar} alt=\"Profile\" onClick={handleProfileClick} style={{ width: '100px', height: '100px', cursor: 'pointer', borderRadius: '50%' }} />\n      </div>\n      <Contentform onNewPost={createPost} />\n    </div>\n  );\n};\n\nexport default Post_App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}