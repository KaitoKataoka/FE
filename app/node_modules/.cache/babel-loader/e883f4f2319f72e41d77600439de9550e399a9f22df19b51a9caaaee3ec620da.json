{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/ReplyForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fireAuth } from '../firebase.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [profileData, setProfileData] = useState(null);\nuseEffect(() => {\n  const fetchUserProfile = async () => {\n    if (fireAuth.currentUser) {\n      var _fireAuth$currentUser;\n      const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/search?uid=${(_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid}`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setProfileData(data[0]);\n      } else {\n        setProfileData(null);\n      }\n    }\n  };\n  fetchUserProfile();\n}, []);\nconst ReplyForm = ({\n  tweetId,\n  onReplyPosted\n}) => {\n  _s();\n  const [replyContent, setReplyContent] = useState('');\n  const handleReplySubmit = async () => {\n    var _fireAuth$currentUser2;\n    if (replyContent.trim() === \"\") {\n      alert(\"返信内容を入力してください\");\n      return;\n    }\n    const reply = {\n      replycontent: replyContent,\n      uid: (_fireAuth$currentUser2 = fireAuth.currentUser) === null || _fireAuth$currentUser2 === void 0 ? void 0 : _fireAuth$currentUser2.uid,\n      tweetid: tweetId,\n      username: profileData === null || profileData === void 0 ? void 0 : profileData.username\n    };\n    try {\n      const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/reply\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(reply)\n      });\n      if (response.ok) {\n        setReplyContent('');\n        onReplyPosted();\n      }\n    } catch (error) {\n      console.error('Failed to post reply:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: replyContent,\n      onChange: e => setReplyContent(e.target.value),\n      placeholder: \"\\u8FD4\\u4FE1\\u3092\\u5165\\u529B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReplySubmit,\n      children: \"\\u8FD4\\u4FE1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ReplyForm, \"bQJiZoDc8KjhzaYN0/Eo0htCkl8=\");\n_c = ReplyForm;\nexport default ReplyForm;\nvar _c;\n$RefreshReg$(_c, \"ReplyForm\");","map":{"version":3,"names":["React","useState","useEffect","fireAuth","jsxDEV","_jsxDEV","profileData","setProfileData","fetchUserProfile","currentUser","_fireAuth$currentUser","response","fetch","uid","data","json","length","ReplyForm","tweetId","onReplyPosted","_s","replyContent","setReplyContent","handleReplySubmit","_fireAuth$currentUser2","trim","alert","reply","replycontent","tweetid","username","method","headers","body","JSON","stringify","ok","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/ReplyForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fireAuth } from '../firebase.ts';\n\ninterface ReplyFormProps {\n  tweetId: string;\n  userName: string;\n  onReplyPosted: () => void;\n}\n\nconst [profileData, setProfileData] = useState<{ name: string; age: number; username: string; avatar_url: string;} | null>(null);\n\nuseEffect(() => {\nconst fetchUserProfile = async () => {\n  if (fireAuth.currentUser) {\n    const response = await fetch(\n      `https://hackathon-ro2txyk6rq-uc.a.run.app/search?uid=${fireAuth.currentUser?.uid}`\n    );\n    const data = await response.json();\n    if (data && data.length > 0) {\n      setProfileData(data[0]);\n    } else {\n      setProfileData(null);\n    }\n  }\n};\nfetchUserProfile();\n}, []);\n\nconst ReplyForm: React.FC<ReplyFormProps> = ({ tweetId, onReplyPosted }) => {\n  const [replyContent, setReplyContent] = useState('');\n\n  const handleReplySubmit = async () => {\n    if (replyContent.trim() === \"\") {\n      alert(\"返信内容を入力してください\");\n      return;\n    }\n\n    const reply = {\n      replycontent: replyContent,\n      uid: fireAuth.currentUser?.uid,\n      tweetid: tweetId,\n      username: profileData?.username,\n    };\n\n    try {\n      const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/reply\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(reply),\n      });\n\n      if (response.ok) {\n        setReplyContent('');\n        onReplyPosted();\n      }\n    } catch (error) {\n      console.error('Failed to post reply:', error);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={replyContent}\n        onChange={(e) => setReplyContent(e.target.value)}\n        placeholder=\"返信を入力\"\n      />\n      <button onClick={handleReplySubmit}>返信</button>\n    </div>\n  );\n};\n\nexport default ReplyForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAA6E,IAAI,CAAC;AAEhIC,SAAS,CAAC,MAAM;EAChB,MAAMM,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAIL,QAAQ,CAACM,WAAW,EAAE;MAAA,IAAAC,qBAAA;MACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,yDAAAF,qBAAA,GAAwDP,QAAQ,CAACM,WAAW,cAAAC,qBAAA,uBAApBA,qBAAA,CAAsBG,GAAG,EACnF,CAAC;MACD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;QAC3BT,cAAc,CAACO,IAAI,CAAC,CAAC,CAAC,CAAC;MACzB,CAAC,MAAM;QACLP,cAAc,CAAC,IAAI,CAAC;MACtB;IACF;EACF,CAAC;EACDC,gBAAgB,CAAC,CAAC;AAClB,CAAC,EAAE,EAAE,CAAC;AAEN,MAAMS,SAAmC,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMsB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,sBAAA;IACpC,IAAIH,YAAY,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9BC,KAAK,CAAC,eAAe,CAAC;MACtB;IACF;IAEA,MAAMC,KAAK,GAAG;MACZC,YAAY,EAAEP,YAAY;MAC1BR,GAAG,GAAAW,sBAAA,GAAErB,QAAQ,CAACM,WAAW,cAAAe,sBAAA,uBAApBA,sBAAA,CAAsBX,GAAG;MAC9BgB,OAAO,EAAEX,OAAO;MAChBY,QAAQ,EAAExB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEwB;IACzB,CAAC;IAED,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;QAC9EmB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK;MAC5B,CAAC,CAAC;MAEF,IAAIhB,QAAQ,CAACyB,EAAE,EAAE;QACfd,eAAe,CAAC,EAAE,CAAC;QACnBH,aAAa,CAAC,CAAC;MACjB;IACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEhC,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MACEmC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEpB,YAAa;MACpBqB,QAAQ,EAAGC,CAAC,IAAKrB,eAAe,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDI,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACF5C,OAAA;MAAQ6C,OAAO,EAAE3B,iBAAkB;MAAAgB,QAAA,EAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA7CIH,SAAmC;AAAAkC,EAAA,GAAnClC,SAAmC;AA+CzC,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}