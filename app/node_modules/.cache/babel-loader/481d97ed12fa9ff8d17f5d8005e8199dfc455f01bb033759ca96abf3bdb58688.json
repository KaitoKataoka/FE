{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/ReplyList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReplyLikeButton from './Reply_like.tsx';\nimport { fireAuth } from '../firebase.ts';\nimport { fetchLikedReply } from './Reply_like.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReplyList = ({\n  tweetId,\n  onReplyPosted\n}) => {\n  _s();\n  const [replies, setReplies] = useState([]);\n  const [likedTweets, setLikedTweets] = useState([]);\n  const [replyLoading, setReplyLoading] = useState(true);\n  useEffect(() => {\n    const fetchReplies = async () => {\n      try {\n        setReplyLoading(true);\n        if (fireAuth.currentUser) {\n          const likedTweetsData = await fetchLikedReply(fireAuth.currentUser.uid);\n          setLikedTweets(likedTweetsData);\n          const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchreply?tweetid=${tweetId}`);\n          const data = await response.json();\n          if (data) {\n            const replys = data.map(reply => ({\n              replyid: reply.replyid,\n              tweetid: reply.tweetid,\n              replycontent: reply.replycontent,\n              username: reply.username,\n              time: reply.time,\n              like: reply.like,\n              isLiked: likedTweetsData.includes(reply.replyid)\n            }));\n            setReplies(replys);\n            console.log(\"Replies fetched successfully:\", replys); // Debug log\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching replies:', error);\n      } finally {\n        setReplyLoading(false);\n      }\n    };\n    fetchReplies();\n    onReplyPosted();\n  }, [tweetId]);\n  const handleLikeChange = (replyid, isLiked, likeCount) => {\n    setLikedTweets(prev => isLiked ? [...prev, replyid] : prev.filter(id => id !== replyid));\n    setReplies(prevReplies => prevReplies.map(reply => reply.replyid === replyid ? {\n      ...reply,\n      like: likeCount,\n      isLiked\n    } : reply));\n  };\n  const formatDateTime = dateTime => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: replyLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: reply.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: reply.replycontent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatDateTime(reply.time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ReplyLikeButton, {\n        replyid: reply.replyid,\n        initialLike: reply.like,\n        initialIsLiked: reply.isLiked,\n        onLikeChange: handleLikeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, reply.replyid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ReplyList, \"BRokCCwb0iyMAPK+MwCjhWz6xpc=\");\n_c = ReplyList;\nexport default ReplyList;\nvar _c;\n$RefreshReg$(_c, \"ReplyList\");","map":{"version":3,"names":["React","useEffect","useState","ReplyLikeButton","fireAuth","fetchLikedReply","jsxDEV","_jsxDEV","ReplyList","tweetId","onReplyPosted","_s","replies","setReplies","likedTweets","setLikedTweets","replyLoading","setReplyLoading","fetchReplies","currentUser","likedTweetsData","uid","response","fetch","data","json","replys","map","reply","replyid","tweetid","replycontent","username","time","like","isLiked","includes","console","log","error","handleLikeChange","likeCount","prev","filter","id","prevReplies","formatDateTime","dateTime","date","Date","formattedDate","getFullYear","String","getMonth","padStart","getDate","formattedTime","getHours","getMinutes","getSeconds","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","initialLike","initialIsLiked","onLikeChange","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/ReplyList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReplyLikeButton from './Reply_like.tsx';\nimport { fireAuth } from '../firebase.ts';\nimport { fetchLikedReply } from './Reply_like.tsx';\n\ninterface Reply {\n  replyid: string;\n  tweetid: string;\n  replycontent: string;\n  username: string;\n  time: string;\n  like: number;\n  isLiked: boolean;\n}\n\ninterface ReplyListProps {\n  tweetId: string;\n  onReplyPosted: () => void;\n}\n\nconst ReplyList: React.FC<ReplyListProps> = ({ tweetId, onReplyPosted }) => {\n  const [replies, setReplies] = useState<Reply[]>([]);\n  const [likedTweets, setLikedTweets] = useState<string[]>([]);\n  const [replyLoading, setReplyLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    const fetchReplies = async () => {\n      try {\n        setReplyLoading(true);\n        if (fireAuth.currentUser) {\n          const likedTweetsData = await fetchLikedReply(fireAuth.currentUser.uid);\n          setLikedTweets(likedTweetsData);\n          const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchreply?tweetid=${tweetId}`);\n          const data = await response.json();\n          if (data) {\n            const replys = data.map((reply: any) => ({\n              replyid: reply.replyid,\n              tweetid: reply.tweetid,\n              replycontent: reply.replycontent,\n              username: reply.username,\n              time: reply.time,\n              like: reply.like,\n              isLiked: likedTweetsData.includes(reply.replyid),\n            }));\n            setReplies(replys);\n            console.log(\"Replies fetched successfully:\", replys); // Debug log\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching replies:', error);\n      } finally {\n        setReplyLoading(false);\n      }\n    };\n\n    fetchReplies();\n    onReplyPosted();\n  }, [tweetId]);\n\n  const handleLikeChange = (replyid: string, isLiked: boolean, likeCount: number) => {\n    setLikedTweets(prev => isLiked ? [...prev, replyid] : prev.filter(id => id !== replyid));\n    setReplies(prevReplies =>\n      prevReplies.map(reply =>\n        reply.replyid === replyid ? { ...reply, like: likeCount, isLiked } : reply\n      )\n    );\n  };\n\n  const formatDateTime = (dateTime: string) => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n\n  return (\n    <div>\n      {replyLoading ? (\n        <div style={{ textAlign: 'center' }}>Loading...</div>\n      ) : (\n        replies.map((reply) => (\n          <div key={reply.replyid}>\n            <p>{reply.username}</p>\n            <p>{reply.replycontent}</p>\n            <p>{formatDateTime(reply.time)}</p>\n            <ReplyLikeButton\n              replyid={reply.replyid}\n              initialLike={reply.like}\n              initialIsLiked={reply.isLiked}\n              onLikeChange={handleLikeChange}\n            />\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ReplyList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}