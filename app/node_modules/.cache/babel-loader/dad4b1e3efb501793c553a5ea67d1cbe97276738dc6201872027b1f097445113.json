{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fireAuth } from './firebase.ts';\nimport Post from \"./Post/PostUI.tsx\";\nimport NewPost from \"./Post/Newpost.tsx\";\nimport ProfileSetup from './Profile/Profilesetup.tsx';\nimport { getPosts, createPost, likePost, isProfileComplete } from './api.tsx';\nimport Signup_in_App from './Signup_in/Signup_in_App.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [profileComplete, setProfileComplete] = useState(false);\n  useEffect(() => {\n    const unsubscribe = fireAuth.onAuthStateChanged(async user => {\n      setUser(user);\n      if (user) {\n        const isComplete = await isProfileComplete(user.uid);\n        setProfileComplete(isComplete);\n      }\n    });\n    fetchPosts();\n    return () => unsubscribe();\n  }, []);\n  const fetchPosts = async () => {\n    const posts = await getPosts();\n    setPosts(posts);\n  };\n  const handleNewPost = async content => {\n    await createPost(content);\n    fetchPosts();\n  };\n  const handleLikePost = async postId => {\n    await likePost(postId);\n    fetchPosts();\n  };\n  const handleAuthSuccess = async () => {\n    if (fireAuth.currentUser) {\n      const isComplete = await isProfileComplete(fireAuth.currentUser.uid);\n      setProfileComplete(isComplete);\n    }\n  };\n  const handleProfileComplete = () => {\n    setProfileComplete(true);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Signup_in_App, {\n      onAuthSuccess: handleAuthSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  if (!profileComplete) {\n    return /*#__PURE__*/_jsxDEV(ProfileSetup, {\n      onProfileComplete: handleProfileComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Twitter Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewPost, {\n      onNewPost: handleNewPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      onLike: handleLikePost\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zZbmKKU5Qvb4nSIOVv9EaETWF4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fireAuth","Post","NewPost","ProfileSetup","getPosts","createPost","likePost","isProfileComplete","Signup_in_App","jsxDEV","_jsxDEV","App","_s","user","setUser","posts","setPosts","profileComplete","setProfileComplete","unsubscribe","onAuthStateChanged","isComplete","uid","fetchPosts","handleNewPost","content","handleLikePost","postId","handleAuthSuccess","currentUser","handleProfileComplete","onAuthSuccess","fileName","_jsxFileName","lineNumber","columnNumber","onProfileComplete","children","onNewPost","map","post","onLike","id","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {fireAuth} from './firebase.ts';\nimport { User } from 'firebase/auth';\nimport Post from \"./Post/PostUI.tsx\";\nimport NewPost from  \"./Post/Newpost.tsx\";\nimport ProfileSetup from './Profile/Profilesetup.tsx';\nimport { getPosts, createPost, likePost, isProfileComplete } from './api.tsx';\nimport Signup_in_App from './Signup_in/Signup_in_App.tsx';\n\nexport interface Post {\n  id: string;\n  content: string;\n  likes: number;\n}\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [profileComplete, setProfileComplete] = useState<boolean>(false);\n\n  useEffect(() => {\n    const unsubscribe = fireAuth.onAuthStateChanged(async user => {\n      setUser(user);\n      if (user) {\n        const isComplete = await isProfileComplete(user.uid);\n        setProfileComplete(isComplete);\n      }\n    });\n    fetchPosts();\n    return () => unsubscribe();\n  }, []);\n\n  const fetchPosts = async () => {\n    const posts = await getPosts();\n    setPosts(posts);\n  };\n\n  const handleNewPost = async (content: string) => {\n    await createPost(content);\n    fetchPosts();\n  };\n\n  const handleLikePost = async (postId: string) => {\n    await likePost(postId);\n    fetchPosts();\n  };\n\n  const handleAuthSuccess = async() => {\n    if (fireAuth.currentUser) {\n      const isComplete = await isProfileComplete(fireAuth.currentUser.uid);\n      setProfileComplete(isComplete);\n    }\n  };\n\n  const handleProfileComplete = () => {\n    setProfileComplete(true);\n  };\n\n  if (!user) {\n    return <Signup_in_App onAuthSuccess={handleAuthSuccess} />;\n  }\n\n  if (!profileComplete) {\n    return <ProfileSetup onProfileComplete={handleProfileComplete} />;\n  }\n\n  return (\n    <div>\n      <h1>Twitter Clone</h1>\n      <NewPost onNewPost={handleNewPost} />\n      {posts.map(post => (\n        <Post key={post.id} post={post} onLike={handleLikePost} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}