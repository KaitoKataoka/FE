{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/ReplyList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport LikeButton from './Like_post.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReplyList = ({\n  tweetId\n}) => {\n  _s();\n  const [replies, setReplies] = useState([]);\n  useEffect(() => {\n    const fetchReplies = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchreply?tweetid=${tweetId}`);\n        const data = await response.json();\n        setReplies(data || []); // ここでデータがnullの場合は空の配列を設定する\n      } catch (error) {\n        console.error('Error fetching replies:', error);\n      }\n    };\n    fetchReplies();\n  }, [tweetId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: reply.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: reply.replycontent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: new Date(reply.time).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Likes: \", reply.like]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n        tweetid: reply.replyid,\n        initialLike: reply.like,\n        initialIsLiked: false // ここを適切に変更してください\n        ,\n        onLikeChange: () => {} // ここを適切に変更してください\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, reply.replyid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ReplyList, \"2HQ5WUinV6DnAmoZ9iP9Jy3FIPE=\");\n_c = ReplyList;\nexport default ReplyList;\nvar _c;\n$RefreshReg$(_c, \"ReplyList\");","map":{"version":3,"names":["React","useEffect","useState","LikeButton","jsxDEV","_jsxDEV","ReplyList","tweetId","_s","replies","setReplies","fetchReplies","response","fetch","data","json","error","console","children","map","reply","username","fileName","_jsxFileName","lineNumber","columnNumber","replycontent","Date","time","toLocaleString","like","tweetid","replyid","initialLike","initialIsLiked","onLikeChange","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/ReplyList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport LikeButton from './Like_post.tsx';\n\ninterface Reply {\n  replyid: string;\n  replycontent: string;\n  uid: string;\n  tweetid: string;\n  username: string;\n  time: string;\n  like: number;\n}\n\ninterface ReplyListProps {\n  tweetId: string;\n}\n\nconst ReplyList: React.FC<ReplyListProps> = ({ tweetId }) => {\n  const [replies, setReplies] = useState<Reply[]>([]);\n\n  useEffect(() => {\n    const fetchReplies = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchreply?tweetid=${tweetId}`);\n        const data = await response.json();\n        setReplies(data || []); // ここでデータがnullの場合は空の配列を設定する\n      } catch (error) {\n        console.error('Error fetching replies:', error);\n      }\n    };\n\n    fetchReplies();\n  }, [tweetId]);\n\n  return (\n    <div>\n      {replies.map((reply) => (\n        <div key={reply.replyid}>\n          <p>{reply.username}</p>\n          <p>{reply.replycontent}</p>\n          <p>{new Date(reply.time).toLocaleString()}</p>\n          <p>Likes: {reply.like}</p>\n          <LikeButton\n            tweetid={reply.replyid}\n            initialLike={reply.like}\n            initialIsLiked={false} // ここを適切に変更してください\n            onLikeChange={() => {}} // ここを適切に変更してください\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ReplyList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBzC,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAU,EAAE,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAiEN,OAAO,EAAE,CAAC;QACxG,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,UAAU,CAACI,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDL,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,oBACEF,OAAA;IAAAa,QAAA,EACGT,OAAO,CAACU,GAAG,CAAEC,KAAK,iBACjBf,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAIE,KAAK,CAACC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBpB,OAAA;QAAAa,QAAA,EAAIE,KAAK,CAACM;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BpB,OAAA;QAAAa,QAAA,EAAI,IAAIS,IAAI,CAACP,KAAK,CAACQ,IAAI,CAAC,CAACC,cAAc,CAAC;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9CpB,OAAA;QAAAa,QAAA,GAAG,SAAO,EAACE,KAAK,CAACU,IAAI;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BpB,OAAA,CAACF,UAAU;QACT4B,OAAO,EAAEX,KAAK,CAACY,OAAQ;QACvBC,WAAW,EAAEb,KAAK,CAACU,IAAK;QACxBI,cAAc,EAAE,KAAM,CAAC;QAAA;QACvBC,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA,GAVML,KAAK,CAACY,OAAO;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWlB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnCIF,SAAmC;AAAA8B,EAAA,GAAnC9B,SAAmC;AAqCzC,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}