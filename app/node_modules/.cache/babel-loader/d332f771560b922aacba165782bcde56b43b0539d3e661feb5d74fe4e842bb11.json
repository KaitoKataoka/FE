{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/CirclePage.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Text, Center, Loader, Button } from '@mantine/core';\nimport { fireAuth } from '../firebase.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CirclePage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    circleid\n  } = useParams();\n  const [circle, setCircle] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchCircle = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/getcirclebyid?circleid=${circleid}`);\n        if (response.ok) {\n          const data = await response.json();\n          setCircle(data);\n        } else {\n          setError('サークルの取得に失敗しました');\n        }\n      } catch (err) {\n        setError('サークルの取得に失敗しました');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCircle();\n  }, [circleid]);\n  const handleCircleRegister = async () => {\n    _s();\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    try {\n      var _fireAuth$currentUser;\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/postcirclemember', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          circleID: circleid,\n          creater: (_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid\n        })\n      });\n      if (response.ok) {\n        setSuccess('サークルに加入しました');\n        setError('');\n      } else {\n        const result = await response.json();\n        setError(result.message || 'サークルの加入に失敗しました');\n        setSuccess('');\n      }\n    } catch (err) {\n      setError('サークルの加入に失敗しました');\n      setSuccess('');\n    }\n  };\n  _s(handleCircleRegister, \"KXMIt4d2391zHz3CXm0GSMYx23s=\");\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleCircleRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: circle === null || circle === void 0 ? void 0 : circle.circlename\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s2(CirclePage, \"q67CEddybZShSMB1ZfPGSUNk+TM=\", false, function () {\n  return [useParams];\n});\n_c = CirclePage;\nexport default CirclePage;\nvar _c;\n$RefreshReg$(_c, \"CirclePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Box","Text","Center","Loader","Button","fireAuth","jsxDEV","_jsxDEV","CirclePage","_s2","_s","$RefreshSig$","circleid","circle","setCircle","loading","setLoading","error","setError","fetchCircle","response","fetch","ok","data","json","err","handleCircleRegister","success","setSuccess","_fireAuth$currentUser","method","headers","body","JSON","stringify","circleID","creater","currentUser","uid","result","message","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","circlename","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/CirclePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Text, Center, Loader, Button } from '@mantine/core';\nimport { fireAuth } from '../firebase.ts';\n\nconst CirclePage = () => {\n  const { circleid } = useParams();\n  const [circle, setCircle] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchCircle = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/getcirclebyid?circleid=${circleid}`);\n        if (response.ok) {\n          const data = await response.json();\n          setCircle(data);\n        } else {\n          setError('サークルの取得に失敗しました');\n        }\n      } catch (err) {\n        setError('サークルの取得に失敗しました');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCircle();\n  }, [circleid]);\n\n  const handleCircleRegister = async () => {\n    const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n    try {\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/postcirclemember', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ circleID: circleid, creater: fireAuth.currentUser?.uid }),\n      });\n\n      if (response.ok) {\n        setSuccess('サークルに加入しました');\n        setError('');\n      } else {\n        const result = await response.json();\n        setError(result.message || 'サークルの加入に失敗しました');\n        setSuccess('');\n      }\n    } catch (err) {\n      setError('サークルの加入に失敗しました');\n      setSuccess('');\n    }\n  };\n\n  if (loading) {\n    return (\n      <Center style={{ height: '100vh' }}>\n        <Loader />\n      </Center>\n    );\n  }\n\n\n  return (\n    <Box>\n      <Button onClick={handleCircleRegister}></Button>\n      <Text>{circle?.circlename}</Text>\n      {/* サークルに関する他の情報を表示 */}\n    </Box>\n  );\n};\n\nexport default CirclePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}