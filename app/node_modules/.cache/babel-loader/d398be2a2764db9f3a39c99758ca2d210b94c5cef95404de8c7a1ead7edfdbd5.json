{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.tsx';\nimport { MantineProvider, ColorSchemeProvider, Button } from '@mantine/core';\nimport { useHotkeys, useLocalStorage } from '@mantine/hooks';\nimport reportWebVitals from './reportWebVitals.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootComponent = () => {\n  _s();\n  const [colorScheme, setColorScheme] = useLocalStorage({\n    key: 'mantine-color-scheme',\n    defaultValue: 'light',\n    getInitialValueInEffect: true\n  });\n  const toggleColorScheme = value => setColorScheme(value || (colorScheme === 'dark' ? 'light' : 'dark'));\n  useHotkeys([['mod+J', () => toggleColorScheme()]]);\n  return /*#__PURE__*/_jsxDEV(ColorSchemeProvider, {\n    colorScheme: colorScheme,\n    toggleColorScheme: toggleColorScheme,\n    children: /*#__PURE__*/_jsxDEV(MantineProvider, {\n      theme: {\n        colorScheme\n      },\n      withGlobalStyles: true,\n      withNormalizeCSS: true,\n      children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => toggleColorScheme(),\n        style: {\n          position: 'flex',\n          bottom: '20px',\n          right: '20px'\n        },\n        children: \"Toggle Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(RootComponent, \"cEm9SKWj0I3Rw4lcNHpwvUtvvXo=\", false, function () {\n  return [useLocalStorage, useHotkeys];\n});\n_c = RootComponent;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(RootComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this));\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"RootComponent\");","map":{"version":3,"names":["React","ReactDOM","App","MantineProvider","ColorSchemeProvider","Button","useHotkeys","useLocalStorage","reportWebVitals","jsxDEV","_jsxDEV","RootComponent","_s","colorScheme","setColorScheme","key","defaultValue","getInitialValueInEffect","toggleColorScheme","value","children","theme","withGlobalStyles","withNormalizeCSS","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","position","bottom","right","_c","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.tsx';\nimport { MantineProvider, ColorSchemeProvider, ColorScheme, Button } from '@mantine/core';\nimport { useHotkeys, useLocalStorage } from '@mantine/hooks';\nimport reportWebVitals from './reportWebVitals.ts';\n\nconst RootComponent: React.FC = () => {\n  const [colorScheme, setColorScheme] = useLocalStorage<ColorScheme>({\n    key: 'mantine-color-scheme',\n    defaultValue: 'light',\n    getInitialValueInEffect: true,\n  });\n\n  const toggleColorScheme = (value?: ColorScheme) =>\n    setColorScheme(value || (colorScheme === 'dark' ? 'light' : 'dark'));\n\n  useHotkeys([['mod+J', () => toggleColorScheme()]]);\n\n  return (\n    <ColorSchemeProvider colorScheme={colorScheme} toggleColorScheme={toggleColorScheme}>\n      <MantineProvider theme={{ colorScheme }} withGlobalStyles withNormalizeCSS>\n        <App />\n        <Button\n          onClick={() => toggleColorScheme()}\n          style={{ position: 'flex', bottom: '20px', right: '20px' }}\n        >\n          Toggle Theme\n        </Button>\n      </MantineProvider>\n    </ColorSchemeProvider>\n  );\n};\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(\n  <React.StrictMode>\n    <RootComponent />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,eAAe,EAAEC,mBAAmB,EAAeC,MAAM,QAAQ,eAAe;AACzF,SAASC,UAAU,EAAEC,eAAe,QAAQ,gBAAgB;AAC5D,OAAOC,eAAe,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,eAAe,CAAc;IACjEQ,GAAG,EAAE,sBAAsB;IAC3BC,YAAY,EAAE,OAAO;IACrBC,uBAAuB,EAAE;EAC3B,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,KAAmB,IAC5CL,cAAc,CAACK,KAAK,KAAKN,WAAW,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC,CAAC;EAEtEP,UAAU,CAAC,CAAC,CAAC,OAAO,EAAE,MAAMY,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;EAElD,oBACER,OAAA,CAACN,mBAAmB;IAACS,WAAW,EAAEA,WAAY;IAACK,iBAAiB,EAAEA,iBAAkB;IAAAE,QAAA,eAClFV,OAAA,CAACP,eAAe;MAACkB,KAAK,EAAE;QAAER;MAAY,CAAE;MAACS,gBAAgB;MAACC,gBAAgB;MAAAH,QAAA,gBACxEV,OAAA,CAACR,GAAG;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACPjB,OAAA,CAACL,MAAM;QACLuB,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAAC,CAAE;QACnCW,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAZ,QAAA,EAC5D;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAE1B,CAAC;AAACf,EAAA,CAzBID,aAAuB;EAAA,QACWJ,eAAe,EASrDD,UAAU;AAAA;AAAA2B,EAAA,GAVNtB,aAAuB;AA2B7B,MAAMuB,IAAI,GAAGjC,QAAQ,CAACkC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAgB,CAAC;AAChFH,IAAI,CAACI,MAAM,eACT5B,OAAA,CAACV,KAAK,CAACuC,UAAU;EAAAnB,QAAA,eACfV,OAAA,CAACC,aAAa;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACpB,CAAC;AAEDnB,eAAe,CAAC,CAAC;AAAC,IAAAyB,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}