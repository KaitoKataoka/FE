{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/ReplyForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fireAuth } from '../firebase.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReplyForm = ({\n  tweetId,\n  userName,\n  onReplyPosted\n}) => {\n  _s();\n  const [replyContent, setReplyContent] = useState('');\n  const handleReplySubmit = async () => {\n    var _fireAuth$currentUser;\n    if (replyContent.trim() === \"\") {\n      alert(\"返信内容を入力してください\");\n      return;\n    }\n    const reply = {\n      replycontent: replyContent,\n      uid: (_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid,\n      tweetid: tweetId,\n      username: userName\n    };\n    try {\n      const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/reply\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(reply)\n      });\n      if (response.ok) {\n        console.log(userName);\n        setReplyContent('');\n        onReplyPosted();\n      }\n    } catch (error) {\n      console.error('Failed to post reply:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: replyContent,\n      onChange: e => setReplyContent(e.target.value),\n      placeholder: \"\\u8FD4\\u4FE1\\u3092\\u5165\\u529B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReplySubmit,\n      children: \"\\u8FD4\\u4FE1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ReplyForm, \"bQJiZoDc8KjhzaYN0/Eo0htCkl8=\");\n_c = ReplyForm;\nexport default ReplyForm;\nvar _c;\n$RefreshReg$(_c, \"ReplyForm\");","map":{"version":3,"names":["React","useState","fireAuth","jsxDEV","_jsxDEV","ReplyForm","tweetId","userName","onReplyPosted","_s","replyContent","setReplyContent","handleReplySubmit","_fireAuth$currentUser","trim","alert","reply","replycontent","uid","currentUser","tweetid","username","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/ReplyForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { fireAuth } from '../firebase.ts';\n\ninterface ReplyFormProps {\n  tweetId: string;\n  userName: string;\n  onReplyPosted: () => void;\n}\n\nconst ReplyForm: React.FC<ReplyFormProps> = ({ tweetId, userName, onReplyPosted }) => {\n  const [replyContent, setReplyContent] = useState('');\n\n  const handleReplySubmit = async () => {\n    if (replyContent.trim() === \"\") {\n      alert(\"返信内容を入力してください\");\n      return;\n    }\n\n    const reply = {\n      replycontent: replyContent,\n      uid: fireAuth.currentUser?.uid,\n      tweetid: tweetId,\n      username: userName,\n    };\n\n    try {\n      const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/reply\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(reply),\n      });\n\n      if (response.ok) {\n        console.log(userName)\n        setReplyContent('');\n        onReplyPosted();\n      }\n    } catch (error) {\n      console.error('Failed to post reply:', error);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={replyContent}\n        onChange={(e) => setReplyContent(e.target.value)}\n        placeholder=\"返信を入力\"\n      />\n      <button onClick={handleReplySubmit}>返信</button>\n    </div>\n  );\n};\n\nexport default ReplyForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1C,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,qBAAA;IACpC,IAAIH,YAAY,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9BC,KAAK,CAAC,eAAe,CAAC;MACtB;IACF;IAEA,MAAMC,KAAK,GAAG;MACZC,YAAY,EAAEP,YAAY;MAC1BQ,GAAG,GAAAL,qBAAA,GAAEX,QAAQ,CAACiB,WAAW,cAAAN,qBAAA,uBAApBA,qBAAA,CAAsBK,GAAG;MAC9BE,OAAO,EAAEd,OAAO;MAChBe,QAAQ,EAAEd;IACZ,CAAC;IAED,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;QAC9EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,KAAK;MAC5B,CAAC,CAAC;MAEF,IAAIM,QAAQ,CAACO,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAACxB,QAAQ,CAAC;QACrBI,eAAe,CAAC,EAAE,CAAC;QACnBH,aAAa,CAAC,CAAC;MACjB;IACF,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACE5B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEzB,YAAa;MACpB0B,QAAQ,EAAGC,CAAC,IAAK1B,eAAe,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDI,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFvC,OAAA;MAAQwC,OAAO,EAAEhC,iBAAkB;MAAAqB,QAAA,EAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAAClC,EAAA,CA9CIJ,SAAmC;AAAAwC,EAAA,GAAnCxC,SAAmC;AAgDzC,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}