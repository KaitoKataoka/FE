{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/Reply.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fireAuth } from '../firebase.ts';\nimport ReplyLikeButton from './Reply_like.tsx'; // いいね機能\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReplyComponent = ({\n  tweetId,\n  profileData\n}) => {\n  _s();\n  const [replyContent, setReplyContent] = useState('');\n  const [replies, setReplies] = useState([]);\n  const [showReplyForm, setShowReplyForm] = useState(false);\n  const handleReplySubmit = async () => {\n    var _fireAuth$currentUser;\n    if (replyContent.trim() === \"\") {\n      alert(\"返信内容を入力してください\");\n      return;\n    }\n    const reply = {\n      replycontent: replyContent,\n      uid: (_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid,\n      tweetid: tweetId,\n      username: profileData === null || profileData === void 0 ? void 0 : profileData.username\n    };\n    try {\n      const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/reply\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(reply)\n      });\n      if (response.ok) {\n        const newReply = await response.json();\n        setReplies([...replies, newReply]);\n        setReplyContent('');\n        setShowReplyForm(false);\n      }\n    } catch (error) {\n      console.error('Failed to post reply:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchReplies = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchreply?tweetid=${tweetId}`);\n        const data = await response.json();\n        setReplies(data);\n      } catch (error) {\n        console.error('Failed to fetch replies:', error);\n      }\n    };\n    fetchReplies();\n  }, [tweetId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowReplyForm(!showReplyForm),\n      children: \"\\u8FD4\\u4FE1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), showReplyForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: replyContent,\n        onChange: e => setReplyContent(e.target.value),\n        placeholder: \"\\u8FD4\\u4FE1\\u5185\\u5BB9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReplySubmit,\n        children: \"\\u9001\\u4FE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.replycontent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReplyLikeButton, {\n          replyid: reply.replyid,\n          initialLike: reply.like,\n          initialIsLiked: reply.isLiked,\n          onLikeChange: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, reply.replyid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(ReplyComponent, \"n2OjF8sPR2hQlfTz/Znt8pi3W/A=\");\n_c = ReplyComponent;\nexport default ReplyComponent;\nvar _c;\n$RefreshReg$(_c, \"ReplyComponent\");","map":{"version":3,"names":["React","useState","useEffect","fireAuth","ReplyLikeButton","jsxDEV","_jsxDEV","ReplyComponent","tweetId","profileData","_s","replyContent","setReplyContent","replies","setReplies","showReplyForm","setShowReplyForm","handleReplySubmit","_fireAuth$currentUser","trim","alert","reply","replycontent","uid","currentUser","tweetid","username","response","fetch","method","headers","body","JSON","stringify","ok","newReply","json","error","console","fetchReplies","data","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","map","time","replyid","initialLike","like","initialIsLiked","isLiked","onLikeChange","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/Reply.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fireAuth } from '../firebase.ts';\nimport ReplyLikeButton from './Reply_like.tsx'; // いいね機能\n\ninterface ReplyProps {\n  tweetId: string;\n  profileData: { username: string } | null;\n}\n\ninterface Reply {\n  replyid: string;\n  tweetid: string;\n  replycontent: string;\n  username: string;\n  time: string;\n  like: number;\n  isLiked: boolean;\n}\n\nconst ReplyComponent: React.FC<ReplyProps> = ({ tweetId, profileData }) => {\n  const [replyContent, setReplyContent] = useState('');\n  const [replies, setReplies] = useState<Reply[]>([]);\n  const [showReplyForm, setShowReplyForm] = useState<boolean>(false);\n\n  const handleReplySubmit = async () => {\n    if (replyContent.trim() === \"\") {\n      alert(\"返信内容を入力してください\");\n      return;\n    }\n\n    const reply = {\n      replycontent: replyContent,\n      uid: fireAuth.currentUser?.uid,\n      tweetid: tweetId,\n      username: profileData?.username,\n    };\n\n    try {\n      const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/reply\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(reply),\n      });\n\n      if (response.ok) {\n        const newReply = await response.json();\n        setReplies([...replies, newReply]);\n        setReplyContent('');\n        setShowReplyForm(false);\n      }\n    } catch (error) {\n      console.error('Failed to post reply:', error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchReplies = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchreply?tweetid=${tweetId}`);\n        const data = await response.json();\n        setReplies(data);\n      } catch (error) {\n        console.error('Failed to fetch replies:', error);\n      }\n    };\n\n    fetchReplies();\n  }, [tweetId]);\n\n  return (\n    <div>\n      <button onClick={() => setShowReplyForm(!showReplyForm)}>返信</button>\n      {showReplyForm && (\n        <div>\n          <textarea\n            value={replyContent}\n            onChange={(e) => setReplyContent(e.target.value)}\n            placeholder=\"返信内容を入力してください\"\n          ></textarea>\n          <button onClick={handleReplySubmit}>送信</button>\n        </div>\n      )}\n      <div>\n        {replies.map(reply => (\n          <div key={reply.replyid}>\n            <p>{reply.username}</p>\n            <p>{reply.replycontent}</p>\n            <p>{reply.time}</p>\n            <ReplyLikeButton\n              replyid={reply.replyid}\n              initialLike={reply.like}\n              initialIsLiked={reply.isLiked}\n              onLikeChange={() => {}}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ReplyComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}