{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/CircleForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Input, Text } from '@mantine/core';\nimport { fireAuth } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircleCreateForm = ({\n  onCreate\n}) => {\n  _s();\n  const [circleName, setCircleName] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!circleName) {\n      setError('サークル名を入力してください');\n      return;\n    }\n    try {\n      var _fireAuth$currentUser;\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/postcircle', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          circleName,\n          creater: (_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid\n        }) // currentUserIdは適切なユーザーIDに置き換えてください\n      });\n      if (response.ok) {\n        const result = await response.json();\n        onCreate(result);\n        setCircleName('');\n        setError('');\n      } else {\n        const result = await response.json();\n        setError(result.message || 'サークルの作成に失敗しました');\n      }\n    } catch (err) {\n      setError('サークルの作成に失敗しました');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"\\u30B5\\u30FC\\u30AF\\u30EB\\u540D\",\n        value: circleName,\n        onChange: e => setCircleName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Text, {\n        color: \"red\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\u30B5\\u30FC\\u30AF\\u30EB\\u4F5C\\u6210\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(CircleCreateForm, \"Zrp1456srO1xdRFq3fS0d0tWgyU=\");\n_c = CircleCreateForm;\nexport default CircleCreateForm;\nvar _c;\n$RefreshReg$(_c, \"CircleCreateForm\");","map":{"version":3,"names":["React","useState","Box","Button","Input","Text","fireAuth","jsxDEV","_jsxDEV","CircleCreateForm","onCreate","_s","circleName","setCircleName","error","setError","handleSubmit","e","preventDefault","_fireAuth$currentUser","response","fetch","method","headers","body","JSON","stringify","creater","currentUser","uid","ok","result","json","message","err","children","onSubmit","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","color","type","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/CircleForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Button, Input, Text } from '@mantine/core';\nimport { fireAuth } from '../firebase';\n\nconst CircleCreateForm = ({ onCreate }) => {\n  const [circleName, setCircleName] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!circleName) {\n      setError('サークル名を入力してください');\n      return;\n    }\n\n    try {\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/postcircle', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ circleName, creater: fireAuth.currentUser?.uid }), // currentUserIdは適切なユーザーIDに置き換えてください\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        onCreate(result);\n        setCircleName('');\n        setError('');\n      } else {\n        const result = await response.json();\n        setError(result.message || 'サークルの作成に失敗しました');\n      }\n    } catch (err) {\n      setError('サークルの作成に失敗しました');\n    }\n  };\n\n  return (\n    <Box>\n      <form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"サークル名\"\n          value={circleName}\n          onChange={(e) => setCircleName(e.target.value)}\n        />\n        {error && <Text color=\"red\">{error}</Text>}\n        <Button type=\"submit\">サークル作成</Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default CircleCreateForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AACxD,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,UAAU,EAAE;MACfG,QAAQ,CAAC,gBAAgB,CAAC;MAC1B;IACF;IAEA,IAAI;MAAA,IAAAI,qBAAA;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,EAAE;QACnFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,UAAU;UAAEe,OAAO,GAAAR,qBAAA,GAAEb,QAAQ,CAACsB,WAAW,cAAAT,qBAAA,uBAApBA,qBAAA,CAAsBU;QAAI,CAAC,CAAC,CAAE;MAC5E,CAAC,CAAC;MAEF,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACf,MAAMC,MAAM,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACpCtB,QAAQ,CAACqB,MAAM,CAAC;QAChBlB,aAAa,CAAC,EAAE,CAAC;QACjBE,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,MAAM;QACL,MAAMgB,MAAM,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACpCjB,QAAQ,CAACgB,MAAM,CAACE,OAAO,IAAI,gBAAgB,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZnB,QAAQ,CAAC,gBAAgB,CAAC;IAC5B;EACF,CAAC;EAED,oBACEP,OAAA,CAACN,GAAG;IAAAiC,QAAA,eACF3B,OAAA;MAAM4B,QAAQ,EAAEpB,YAAa;MAAAmB,QAAA,gBAC3B3B,OAAA,CAACJ,KAAK;QACJiC,WAAW,EAAC,gCAAO;QACnBC,KAAK,EAAE1B,UAAW;QAClB2B,QAAQ,EAAGtB,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACuB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,EACD9B,KAAK,iBAAIN,OAAA,CAACH,IAAI;QAACwC,KAAK,EAAC,KAAK;QAAAV,QAAA,EAAErB;MAAK;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1CpC,OAAA,CAACL,MAAM;QAAC2C,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjC,EAAA,CA/CIF,gBAAgB;AAAAsC,EAAA,GAAhBtC,gBAAgB;AAiDtB,eAAeA,gBAAgB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}