{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/Post_App.tsx\",\n  _s = $RefreshSig$();\nimport { fireAuth } from '../firebase.ts';\nimport React, { useState, useEffect } from 'react';\nimport Contentform from './Newpost.tsx';\nimport { signOut } from 'firebase/auth';\nimport { getPosts } from './Postapi.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post_App = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [profileData, setProfileData] = useState(null);\n  const [showProfile, setShowProfile] = useState(false);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const posts = await getPosts();\n      setPosts(posts);\n    };\n    const fetchUserProfile = async () => {\n      if (fireAuth.currentUser) {\n        var _fireAuth$currentUser;\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/search?uid=${(_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid}`);\n        const data = await response.json();\n        console.log(data);\n        if (data && data.length > 0) {\n          setProfileData(data[0]);\n        } else {\n          setProfileData(null);\n        }\n      }\n    };\n    fetchPosts();\n    fetchUserProfile();\n  }, []);\n  const createPost = async content => {\n    return new Promise(async (resolve, reject) => {\n      var _fireAuth$currentUser2;\n      const firebaseUID = (_fireAuth$currentUser2 = fireAuth.currentUser) === null || _fireAuth$currentUser2 === void 0 ? void 0 : _fireAuth$currentUser2.uid;\n      let errormessage = \"\";\n      if (!content) {\n        alert(\"tweet is empty\");\n        errormessage = \"tweet is empty\";\n      }\n      if (errormessage) {\n        console.log(errormessage);\n        reject(errormessage);\n        return;\n      }\n      try {\n        const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/post\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            content: content,\n            uid: firebaseUID\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error(\"Failed to tweet:\", errorData);\n          alert(\"failed to tweet\");\n          errormessage = \"failed to tweet\";\n          reject(errormessage);\n          return;\n        } else {\n          console.log(firebaseUID);\n          resolve();\n        }\n      } catch (error) {\n        console.error(\"failed tweet\", error);\n        alert(\"failed tweet\");\n        reject(error);\n      }\n    });\n  };\n  const signOutWithGoogle = () => {\n    signOut(fireAuth).then(() => {\n      alert(\"ログアウトしました\");\n    }).catch(err => {\n      alert(err);\n    });\n  };\n  if (!profileData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Twitter Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contentform, {\n      onNewPost: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\\u4E2D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u540D\\u524D: \", profileData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u5E74\\u9F62: \", profileData.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D: \", profileData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signOutWithGoogle,\n        children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [post.likes, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Post_App, \"JITTuQdj7/G/GRmNCoZ14uxtsxY=\");\n_c = Post_App;\nexport default Post_App;\nvar _c;\n$RefreshReg$(_c, \"Post_App\");","map":{"version":3,"names":["fireAuth","React","useState","useEffect","Contentform","signOut","getPosts","jsxDEV","_jsxDEV","Post_App","_s","posts","setPosts","profileData","setProfileData","showProfile","setShowProfile","fetchPosts","fetchUserProfile","currentUser","_fireAuth$currentUser","response","fetch","uid","data","json","console","log","length","createPost","content","Promise","resolve","reject","_fireAuth$currentUser2","firebaseUID","errormessage","alert","method","headers","body","JSON","stringify","ok","errorData","error","signOutWithGoogle","then","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onNewPost","name","age","username","onClick","map","post","likes","id","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/Post_App.tsx"],"sourcesContent":["import { fireAuth } from '../firebase.ts';\nimport React, { useState, useEffect } from 'react';\nimport Contentform from './Newpost.tsx';\nimport { signOut } from 'firebase/auth';\nimport { getPosts } from './Postapi.tsx';\n\ninterface Post {\n  id: string;\n  content: string;\n  likes: number;\n}\n\nconst Post_App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [profileData, setProfileData] = useState<{ name: string; age: number; username: string } | null>(null);\n  const [showProfile, setShowProfile] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const posts = await getPosts();\n      setPosts(posts);\n    };\n\n    const fetchUserProfile = async () => {\n      if (fireAuth.currentUser) {\n        const response = await fetch(\n          `https://hackathon-ro2txyk6rq-uc.a.run.app/search?uid=${fireAuth.currentUser?.uid}`\n        );\n        const data = await response.json();\n        console.log(data);\n        if (data && data.length > 0) {\n          setProfileData(data[0]);\n        } else {\n          setProfileData(null);\n        }\n      }\n    };\n\n    fetchPosts();\n    fetchUserProfile();\n  }, []);\n\n  const createPost = async (content: string) => {\n    return new Promise<void>(async (resolve, reject) => {\n      const firebaseUID = fireAuth.currentUser?.uid;\n      let errormessage = \"\";\n      if (!content) {\n        alert(\"tweet is empty\");\n        errormessage = \"tweet is empty\";\n      }\n      if (errormessage) {\n        console.log(errormessage);\n        reject(errormessage);\n        return;\n      }\n      try {\n        const response = await fetch(\n          \"https://hackathon-ro2txyk6rq-uc.a.run.app/post\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              content: content,\n              uid: firebaseUID,\n            }),\n          }\n        );\n        if (!response.ok) {\n          const errorData = await response.json();\n        console.error(\"Failed to tweet:\", errorData);\n          alert(\"failed to tweet\");\n          errormessage = \"failed to tweet\";\n          reject(errormessage);\n          return;\n        } else {\n          console.log(firebaseUID);\n          resolve();\n        }\n      } catch (error) {\n        console.error(\"failed tweet\", error);\n        alert(\"failed tweet\");\n        reject(error);\n      }\n    });\n  };\n\n  const signOutWithGoogle = (): void => {\n    signOut(fireAuth).then(() => {\n      alert(\"ログアウトしました\");\n    }).catch(err => {\n      alert(err);\n    });\n  };\n\n  if (!profileData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1>Twitter Clone</h1>\n      <Contentform onNewPost={createPost} />\n      <div>\n        <p>ログイン中</p>\n        <p>名前: {profileData.name}</p>\n        <p>年齢: {profileData.age}</p>\n        <p>ユーザー名: {profileData.username}</p>\n        <button onClick={signOutWithGoogle}>ログアウト</button>\n      </div>\n      <div>\n        {posts.map(post => (\n          <div key={post.id}>\n            <p>{post.content}</p>\n            <p>{post.likes} Likes</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Post_App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}