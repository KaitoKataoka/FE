{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/Reply.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fireAuth } from '../firebase.ts';\nimport ReplyForm from './ReplyForm.tsx';\nimport ReplyList from './ReplyList.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReplyComponent = ({\n  tweetId,\n  profileData\n}) => {\n  _s();\n  const [replyContent, setReplyContent] = useState('');\n  const [replies, setReplies] = useState([]);\n  const [showReplyForm, setShowReplyForm] = useState(false);\n  const handleReplySubmit = async () => {\n    var _fireAuth$currentUser;\n    if (replyContent.trim() === \"\") {\n      alert(\"返信内容を入力してください\");\n      return;\n    }\n    const reply = {\n      replycontent: replyContent,\n      uid: (_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid,\n      tweetid: tweetId,\n      username: profileData === null || profileData === void 0 ? void 0 : profileData.username\n    };\n    try {\n      const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/reply\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(reply)\n      });\n      if (response.ok) {\n        const newReply = await response.json();\n        setReplies([...replies, newReply]);\n        setReplyContent('');\n        setShowReplyForm(false);\n      }\n    } catch (error) {\n      console.error('Failed to post reply:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchReplies = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchreply?tweetid=${tweetId}`);\n        const data = await response.json();\n        setReplies(data);\n      } catch (error) {\n        console.error('Failed to fetch replies:', error);\n      }\n    };\n    fetchReplies();\n  }, [tweetId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowReplyForm(!showReplyForm),\n      children: \"\\u8FD4\\u4FE1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), showReplyForm && /*#__PURE__*/_jsxDEV(ReplyForm, {\n      tweetId: tweetId,\n      userName: (profileData === null || profileData === void 0 ? void 0 : profileData.username) || '',\n      onReplyPosted: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReplyList, {\n      tweetId: tweetId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ReplyComponent, \"n2OjF8sPR2hQlfTz/Znt8pi3W/A=\");\n_c = ReplyComponent;\nexport default ReplyComponent;\nvar _c;\n$RefreshReg$(_c, \"ReplyComponent\");","map":{"version":3,"names":["React","useState","useEffect","fireAuth","ReplyForm","ReplyList","jsxDEV","_jsxDEV","ReplyComponent","tweetId","profileData","_s","replyContent","setReplyContent","replies","setReplies","showReplyForm","setShowReplyForm","handleReplySubmit","_fireAuth$currentUser","trim","alert","reply","replycontent","uid","currentUser","tweetid","username","response","fetch","method","headers","body","JSON","stringify","ok","newReply","json","error","console","fetchReplies","data","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","userName","onReplyPosted","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/Reply.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fireAuth } from '../firebase.ts';\nimport ReplyLikeButton from './Reply_like.tsx';\nimport ReplyForm from './ReplyForm.tsx';\nimport ReplyList from './ReplyList.tsx';\n\ninterface Reply {\n  replyid: string;\n  tweetid: string;\n  replycontent: string;\n  username: string;\n  time: string;\n  like: number;\n  isLiked: boolean;\n}\n\ninterface ReplyProps {\n  tweetId: string;\n  profileData: { username: string } | null;\n}\n\nconst ReplyComponent: React.FC<ReplyProps> = ({ tweetId, profileData }) => {\n  const [replyContent, setReplyContent] = useState('');\n  const [replies, setReplies] = useState<Reply[]>([]);\n  const [showReplyForm, setShowReplyForm] = useState<boolean>(false);\n\n  const handleReplySubmit = async () => {\n    if (replyContent.trim() === \"\") {\n      alert(\"返信内容を入力してください\");\n      return;\n    }\n\n    const reply = {\n      replycontent: replyContent,\n      uid: fireAuth.currentUser?.uid,\n      tweetid: tweetId,\n      username: profileData?.username,\n    };\n\n    try {\n      const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/reply\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(reply),\n      });\n\n      if (response.ok) {\n        const newReply = await response.json();\n        setReplies([...replies, newReply]);\n        setReplyContent('');\n        setShowReplyForm(false);\n      }\n    } catch (error) {\n      console.error('Failed to post reply:', error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchReplies = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchreply?tweetid=${tweetId}`);\n        const data = await response.json();\n        setReplies(data);\n      } catch (error) {\n        console.error('Failed to fetch replies:', error);\n      }\n    };\n\n    fetchReplies();\n  }, [tweetId]);\n\n  return (\n    <div>\n      <button onClick={() => setShowReplyForm(!showReplyForm)}>返信</button>\n      {showReplyForm && (\n        <ReplyForm tweetId={tweetId} userName={profileData?.username || ''} onReplyPosted={() => {}} />\n      )}\n      <ReplyList tweetId={tweetId} />\n    </div>\n  );\n};\n\nexport default ReplyComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}