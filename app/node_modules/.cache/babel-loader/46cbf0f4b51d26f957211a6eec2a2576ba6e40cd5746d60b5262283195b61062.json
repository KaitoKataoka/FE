{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fireAuth, googleProvider } from '../firebase';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onAuthSuccess\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async () => {\n    await signInWithEmailAndPassword(fireAuth, email, password);\n    onAuthSuccess();\n  };\n  const handleSignup = async () => {\n    await createUserWithEmailAndPassword(fireAuth, email, password);\n    onAuthSuccess();\n  };\n  const handleGoogleLogin = async () => {\n    await signInWithPopup(fireAuth, googleProvider);\n    onAuthSuccess();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignup,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","fireAuth","googleProvider","signInWithEmailAndPassword","createUserWithEmailAndPassword","signInWithPopup","jsxDEV","_jsxDEV","Login","onAuthSuccess","_s","email","setEmail","password","setPassword","handleLogin","handleSignup","handleGoogleLogin","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Login/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { fireAuth, googleProvider } from '../firebase';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\n\ninterface LoginProps {\n  onAuthSuccess: () => void;\n}\n\nconst Login: React.FC<LoginProps> = ({ onAuthSuccess }) => {\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n\n  const handleLogin = async () => {\n    await signInWithEmailAndPassword(fireAuth, email, password);\n    onAuthSuccess();\n  };\n\n  const handleSignup = async () => {\n    await createUserWithEmailAndPassword(fireAuth, email, password);\n    onAuthSuccess();\n  };\n\n  const handleGoogleLogin = async () => {\n    await signInWithPopup(fireAuth, googleProvider);\n    onAuthSuccess();\n  };\n\n  return (\n    <div>\n      <input\n        type=\"email\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n        placeholder=\"Email\"\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n        placeholder=\"Password\"\n      />\n      <button onClick={handleLogin}>Login</button>\n      <button onClick={handleSignup}>Sign Up</button>\n      <button onClick={handleGoogleLogin}>Login with Google</button>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,cAAc,QAAQ,aAAa;AACtD,SAASC,0BAA0B,EAAEC,8BAA8B,EAAEC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM5G,MAAMC,KAA2B,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMZ,0BAA0B,CAACF,QAAQ,EAAEU,KAAK,EAAEE,QAAQ,CAAC;IAC3DJ,aAAa,CAAC,CAAC;EACjB,CAAC;EAED,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMZ,8BAA8B,CAACH,QAAQ,EAAEU,KAAK,EAAEE,QAAQ,CAAC;IAC/DJ,aAAa,CAAC,CAAC;EACjB,CAAC;EAED,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMZ,eAAe,CAACJ,QAAQ,EAAEC,cAAc,CAAC;IAC/CO,aAAa,CAAC,CAAC;EACjB,CAAC;EAED,oBACEF,OAAA;IAAAW,QAAA,gBACEX,OAAA;MACEY,IAAI,EAAC,OAAO;MACZC,KAAK,EAAET,KAAM;MACbU,QAAQ,EAAEC,CAAC,IAAIV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACxCI,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFrB,OAAA;MACEY,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEP,QAAS;MAChBQ,QAAQ,EAAEC,CAAC,IAAIR,WAAW,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFrB,OAAA;MAAQsB,OAAO,EAAEd,WAAY;MAAAG,QAAA,EAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5CrB,OAAA;MAAQsB,OAAO,EAAEb,YAAa;MAAAE,QAAA,EAAC;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/CrB,OAAA;MAAQsB,OAAO,EAAEZ,iBAAkB;MAAAC,QAAA,EAAC;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtCIF,KAA2B;AAAAsB,EAAA,GAA3BtB,KAA2B;AAwCjC,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}