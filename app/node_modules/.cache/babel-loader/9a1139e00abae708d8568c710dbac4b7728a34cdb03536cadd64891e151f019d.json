{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/CirclePage.tsx\",\n  _s = $RefreshSig$();\nimport { fireAuth } from '../firebase.ts';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MantineProvider, AppShell, Header, Text, Input, Avatar, Container, Grid, Button, Center, Box, Textarea, Divider, Loader, FileInput, Image, ScrollArea } from '@mantine/core';\nimport { useMediaQuery } from '@mantine/hooks';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport defaultAvatar from '../assets/default_user.png';\nimport HashtagText from './Hashtag.tsx';\nimport LikeButton from './Like_post.tsx';\nimport ReplyList from './ReplyList.tsx';\nimport ReplyForm from './ReplyForm.tsx';\nimport { IconPhoto, IconSearch } from '@tabler/icons-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CirclePage = ({\n  profileData\n}) => {\n  _s();\n  const {\n    circleid\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isMember, setIsMember] = useState(false);\n  const [isCreator, setIsCreator] = useState(false);\n  const [tweetImage, setTweetImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [imageOk, setImageOk] = useState(false);\n  const [allTweets, setAllTweets] = useState([]);\n  const [replyContent, setReplyContent] = useState('');\n  const isMobile = useMediaQuery(`(max-width: 767px)`);\n  const isMobilePost = useMediaQuery(`(max-width: 970px)`);\n  useEffect(() => {\n    const fetchCircleDetails = async () => {\n      try {\n        var _fireAuth$currentUser;\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/getcircle?uid=${(_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n              if (circleid === data[i].circleid) {\n                var _fireAuth$currentUser2;\n                setIsMember(true);\n                if (data[i].creater === ((_fireAuth$currentUser2 = fireAuth.currentUser) === null || _fireAuth$currentUser2 === void 0 ? void 0 : _fireAuth$currentUser2.uid)) {\n                  setIsCreator(true);\n                }\n              }\n            }\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const fetchCircleTweets = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/getcircletweet?circleid=${circleid}`);\n        if (response.ok) {\n          const data = await response.json();\n          setAllTweets(data || []);\n        }\n      } catch (err) {\n        setError('サークルの取得に失敗しました');\n      } finally {\n        setLoading(false);\n      }\n    };\n    const fetchCircle = async () => {\n      try {\n        var _fireAuth$currentUser3;\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchcircleid?uid=${(_fireAuth$currentUser3 = fireAuth.currentUser) === null || _fireAuth$currentUser3 === void 0 ? void 0 : _fireAuth$currentUser3.uid}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data[0].circleid === circleid) {\n            setIsMember(true);\n          }\n        }\n      } catch (err) {\n        setError('サークルの取得に失敗しました');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCircle();\n    fetchCircleDetails();\n    fetchCircleTweets();\n  }, [circleid]);\n  const handleCircleRegister = async () => {\n    try {\n      var _fireAuth$currentUser4;\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/postcirclemember', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          circleID: circleid,\n          uid: (_fireAuth$currentUser4 = fireAuth.currentUser) === null || _fireAuth$currentUser4 === void 0 ? void 0 : _fireAuth$currentUser4.uid\n        })\n      });\n      if (response.ok) {\n        setSuccess('サークルに加入しました');\n        setError('');\n        setIsMember(true); // 加入後に脱退ボタンを表示\n      } else {\n        const result = await response.json();\n        setError(result.message || 'サークルの加入に失敗しました');\n        setSuccess('');\n      }\n    } catch (err) {\n      setError('サークルの加入に失敗しました');\n      setSuccess('');\n    }\n  };\n  const handleCircleUnregister = async () => {\n    try {\n      var _fireAuth$currentUser5;\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/stopcircle', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          circleid: circleid,\n          uid: (_fireAuth$currentUser5 = fireAuth.currentUser) === null || _fireAuth$currentUser5 === void 0 ? void 0 : _fireAuth$currentUser5.uid\n        })\n      });\n      if (response.ok) {\n        setSuccess('サークルを脱退しました');\n        setError('');\n        setIsMember(false); // 脱退後に加入ボタンを表示\n      } else {\n        const result = await response.json();\n        setError(result.message || 'サークルの脱退に失敗しました');\n        setSuccess('');\n      }\n    } catch (err) {\n      setError('サークルの脱退に失敗しました');\n      setSuccess('');\n    }\n  };\n  const uploadImageAndGetUrl = async file => {\n    const storage = getStorage();\n    const storageRef = ref(storage, `tweet_images/${file.name}`);\n    await uploadBytes(storageRef, file);\n    return await getDownloadURL(storageRef);\n  };\n  const handleImageChange = file => {\n    if (file) {\n      setTweetImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setTweetImage(null);\n      setImagePreview(null);\n    }\n  };\n  const createPost = async content => {\n    var _fireAuth$currentUser6;\n    setImageOk(true);\n    const firebaseUID = (_fireAuth$currentUser6 = fireAuth.currentUser) === null || _fireAuth$currentUser6 === void 0 ? void 0 : _fireAuth$currentUser6.uid;\n    if (!content) {\n      content = \"\";\n    }\n    try {\n      let image_url = \"\";\n      if (tweetImage) {\n        image_url = await uploadImageAndGetUrl(tweetImage);\n      }\n      const avatarresponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchAvatar?uid=${firebaseUID}`);\n      const avatarData = await avatarresponse.json();\n      const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/circlepost\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          circleid: circleid,\n          username: profileData === null || profileData === void 0 ? void 0 : profileData.username,\n          content: content,\n          uid: firebaseUID,\n          like: 0,\n          image: image_url\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error(\"Failed to tweet:\", errorData);\n        alert(\"failed to tweet\");\n        return;\n      } else {\n        const newTweet = {\n          circleid: circleid || \"\",\n          tweetid: \"\",\n          username: (profileData === null || profileData === void 0 ? void 0 : profileData.username) || \"\",\n          time: new Date().toISOString(),\n          content: content,\n          uid: firebaseUID || \"\",\n          like: 0,\n          isLiked: false,\n          replyCount: 0,\n          avatar_url: avatarData.avatar_url || \"\",\n          image: image_url || \"\"\n        };\n        setAllTweets(prevTweets => [newTweet, ...prevTweets]);\n        setTweetImage(null);\n        setImagePreview(null);\n        setImageOk(false);\n      }\n    } catch (error) {\n      console.error(\"failed tweet\", error);\n      alert(\"failed tweet\");\n      setImageOk(false);\n    }\n  };\n  const formatDateTime = dateTime => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MantineProvider, {\n    theme: {\n      colorScheme: 'light'\n    },\n    children: /*#__PURE__*/_jsxDEV(AppShell, {\n      padding: \"md\",\n      header: /*#__PURE__*/_jsxDEV(Header, {\n        height: 70,\n        p: \"xs\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          justify: \"space-between\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n            span: 2,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: (profileData === null || profileData === void 0 ? void 0 : profileData.avatar) || defaultAvatar,\n              alt: \"Profile\",\n              size: 50,\n              radius: \"xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n            span: 7,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"\\u30C4\\u30A4\\u30FC\\u30C8\\u3092\\u691C\\u7D22\",\n              style: {\n                width: '60%',\n                marginBottom: '20px'\n              },\n              icon: /*#__PURE__*/_jsxDEV(IconSearch, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: isMember ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [isCreator ? /*#__PURE__*/_jsxDEV(Text, {\n            children: \"\\u3042\\u306A\\u305F\\u306F\\u3053\\u306E\\u30B5\\u30FC\\u30AF\\u30EB\\u306E\\u4F5C\\u6210\\u8005\\u3067\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCircleUnregister,\n            color: \"red\",\n            children: \"\\u30B5\\u30FC\\u30AF\\u30EB\\u3092\\u8131\\u9000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'fixed',\n              bottom: 0,\n              width: '100%',\n              padding: '10px',\n              background: 'white',\n              zIndex: 1\n            },\n            children: [imagePreview && /*#__PURE__*/_jsxDEV(Image, {\n              src: imagePreview,\n              style: {\n                maxWidth: '30%',\n                height: 'auto'\n              },\n              alt: \"Profile Preview\",\n              radius: \"md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n                span: 10,\n                children: /*#__PURE__*/_jsxDEV(Textarea, {\n                  placeholder: \"\\u4ECA\\u3069\\u3046\\u3057\\u3066\\u308B?\",\n                  value: replyContent,\n                  onChange: e => setReplyContent(e.currentTarget.value),\n                  autosize: true,\n                  minRows: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n                span: 1,\n                children: /*#__PURE__*/_jsxDEV(FileInput, {\n                  onChange: handleImageChange,\n                  accept: \"image/*\",\n                  icon: /*#__PURE__*/_jsxDEV(IconPhoto, {\n                    size: 27\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 29\n                  }, this),\n                  style: {\n                    width: '100%',\n                    marginTop: \"10px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n                span: 1,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"lime\",\n                  sx: {\n                    height: 50,\n                    fontSize: 20\n                  },\n                  fullWidth: true,\n                  onClick: () => createPost(replyContent),\n                  disabled: imageOk || !replyContent && !tweetImage,\n                  children: \"Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            my: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ScrollArea, {\n            style: {\n              height: '70vh'\n            },\n            children: allTweets.length > 0 ? allTweets.map((tweet, index) => /*#__PURE__*/_jsxDEV(Box, {\n              mb: \"lg\",\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n                  span: 1,\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: tweet.avatar_url || defaultAvatar,\n                    alt: \"Profile\",\n                    size: 50,\n                    radius: \"xl\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n                  span: 11,\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    size: \"lg\",\n                    weight: 700,\n                    children: tweet.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    size: \"sm\",\n                    color: \"gray\",\n                    children: formatDateTime(tweet.time)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                children: /*#__PURE__*/_jsxDEV(Grid.Col, {\n                  span: 12,\n                  children: [tweet.image && /*#__PURE__*/_jsxDEV(Image, {\n                    src: tweet.image,\n                    style: {\n                      maxWidth: '100%',\n                      marginTop: '10px'\n                    },\n                    alt: \"Tweet Image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 43\n                  }, this), /*#__PURE__*/_jsxDEV(HashtagText, {\n                    text: tweet.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n                  span: 6,\n                  sx: {\n                    textAlign: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(LikeButton, {\n                    tweetid: tweet.tweetid,\n                    initialLike: tweet.like,\n                    initialIsLiked: tweet.isLiked,\n                    onLikeChange: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n                  span: 6,\n                  children: [/*#__PURE__*/_jsxDEV(ReplyList, {\n                    tweetId: tweet.tweetid,\n                    onHashtagsExtracted: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(ReplyForm, {\n                    tweetId: tweet.tweetid,\n                    onReplyPosted: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                my: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n              children: \"\\u307E\\u3060\\u30C4\\u30A4\\u30FC\\u30C8\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCircleRegister,\n          children: \"\\u30B5\\u30FC\\u30AF\\u30EB\\u306B\\u52A0\\u5165\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(CirclePage, \"xaxR1APruUzIel/Tv1OzfQ/vq0k=\", false, function () {\n  return [useParams, useMediaQuery, useMediaQuery];\n});\n_c = CirclePage;\nexport default CirclePage;\nvar _c;\n$RefreshReg$(_c, \"CirclePage\");","map":{"version":3,"names":["fireAuth","React","useState","useEffect","useParams","MantineProvider","AppShell","Header","Text","Input","Avatar","Container","Grid","Button","Center","Box","Textarea","Divider","Loader","FileInput","Image","ScrollArea","useMediaQuery","getStorage","ref","uploadBytes","getDownloadURL","defaultAvatar","HashtagText","LikeButton","ReplyList","ReplyForm","IconPhoto","IconSearch","jsxDEV","_jsxDEV","Fragment","_Fragment","CirclePage","profileData","_s","circleid","loading","setLoading","error","setError","success","setSuccess","isMember","setIsMember","isCreator","setIsCreator","tweetImage","setTweetImage","imagePreview","setImagePreview","imageOk","setImageOk","allTweets","setAllTweets","replyContent","setReplyContent","isMobile","isMobilePost","fetchCircleDetails","_fireAuth$currentUser","response","fetch","currentUser","uid","ok","data","json","Array","isArray","i","length","_fireAuth$currentUser2","creater","console","log","fetchCircleTweets","err","fetchCircle","_fireAuth$currentUser3","handleCircleRegister","_fireAuth$currentUser4","method","headers","body","JSON","stringify","circleID","result","message","handleCircleUnregister","_fireAuth$currentUser5","uploadImageAndGetUrl","file","storage","storageRef","name","handleImageChange","reader","FileReader","onloadend","readAsDataURL","createPost","content","_fireAuth$currentUser6","firebaseUID","image_url","avatarresponse","avatarData","username","like","image","errorData","alert","newTweet","tweetid","time","Date","toISOString","isLiked","replyCount","avatar_url","prevTweets","formatDateTime","dateTime","date","formattedDate","getFullYear","String","getMonth","padStart","getDate","formattedTime","getHours","getMinutes","getSeconds","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","theme","colorScheme","padding","header","p","justify","align","Col","span","src","avatar","alt","size","radius","type","placeholder","width","marginBottom","icon","onClick","color","sx","position","bottom","background","zIndex","maxWidth","value","onChange","e","currentTarget","autosize","minRows","accept","marginTop","fontSize","fullWidth","disabled","my","map","tweet","index","mb","weight","text","textAlign","initialLike","initialIsLiked","onLikeChange","tweetId","onHashtagsExtracted","onReplyPosted","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/CirclePage.tsx"],"sourcesContent":["import { fireAuth } from '../firebase.ts';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MantineProvider, AppShell, Header, Text, Input, Avatar, Container, Grid, Button, Center, Box, Textarea, Divider, Loader, FileInput, Image, Title, ScrollArea } from '@mantine/core';\nimport { useMediaQuery } from '@mantine/hooks';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport defaultAvatar from '../assets/default_user.png';\nimport HashtagText from './Hashtag.tsx';\nimport LikeButton from './Like_post.tsx';\nimport ReplyList from './ReplyList.tsx';\nimport ReplyForm from './ReplyForm.tsx';\nimport { IconPhoto, IconSearch } from '@tabler/icons-react';\n\ninterface CircleTweet {\n  circleid: string;\n  tweetid: string;\n  username: string;\n  time: string;\n  content: string;\n  uid: string;\n  like: number;\n  isLiked: boolean;\n  replyCount: number;\n  avatar_url: string;\n  image?: string;\n}\n\ninterface MyProfileProps {\n  profileData: { name: string; age: number; username: string; avatar: string };\n}\n\nconst CirclePage: React.FC<MyProfileProps> = ({ profileData }) => {\n  const { circleid } = useParams<{ circleid: string }>();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isMember, setIsMember] = useState<boolean>(false);\n  const [isCreator, setIsCreator] = useState<boolean>(false);\n  const [tweetImage, setTweetImage] = useState<File | null>(null);\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\n  const [imageOk, setImageOk] = useState<boolean>(false);\n  const [allTweets, setAllTweets] = useState<CircleTweet[]>([]);\n  const [replyContent, setReplyContent] = useState<string>('');\n  const isMobile = useMediaQuery(`(max-width: 767px)`);\n  const isMobilePost = useMediaQuery(`(max-width: 970px)`);\n\n  useEffect(() => {\n    const fetchCircleDetails = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/getcircle?uid=${fireAuth.currentUser?.uid}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n              if (circleid === data[i].circleid) {\n                setIsMember(true);\n                if (data[i].creater === fireAuth.currentUser?.uid) {\n                  setIsCreator(true);\n                }\n              }\n            }\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const fetchCircleTweets = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/getcircletweet?circleid=${circleid}`);\n        if (response.ok) {\n          const data = await response.json();\n          setAllTweets(data || []);\n        }\n      } catch (err) {\n        setError('サークルの取得に失敗しました');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchCircle = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchcircleid?uid=${fireAuth.currentUser?.uid}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data[0].circleid === circleid) {\n            setIsMember(true);\n          }\n        }\n      } catch (err) {\n        setError('サークルの取得に失敗しました');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCircle();\n    fetchCircleDetails();\n    fetchCircleTweets();\n  }, [circleid]);\n\n  const handleCircleRegister = async () => {\n    try {\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/postcirclemember', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ circleID: circleid, uid: fireAuth.currentUser?.uid }),\n      });\n\n      if (response.ok) {\n        setSuccess('サークルに加入しました');\n        setError('');\n        setIsMember(true); // 加入後に脱退ボタンを表示\n      } else {\n        const result = await response.json();\n        setError(result.message || 'サークルの加入に失敗しました');\n        setSuccess('');\n      }\n    } catch (err) {\n      setError('サークルの加入に失敗しました');\n      setSuccess('');\n    }\n  };\n\n  const handleCircleUnregister = async () => {\n    try {\n      const response = await fetch('https://hackathon-ro2txyk6rq-uc.a.run.app/stopcircle', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ circleid: circleid, uid: fireAuth.currentUser?.uid }),\n      });\n\n      if (response.ok) {\n        setSuccess('サークルを脱退しました');\n        setError('');\n        setIsMember(false); // 脱退後に加入ボタンを表示\n      } else {\n        const result = await response.json();\n        setError(result.message || 'サークルの脱退に失敗しました');\n        setSuccess('');\n      }\n    } catch (err) {\n      setError('サークルの脱退に失敗しました');\n      setSuccess('');\n    }\n  };\n\n  const uploadImageAndGetUrl = async (file: File): Promise<string> => {\n    const storage = getStorage();\n    const storageRef = ref(storage, `tweet_images/${file.name}`);\n    await uploadBytes(storageRef, file);\n    return await getDownloadURL(storageRef);\n  };\n\n  const handleImageChange = (file: File | null) => {\n    if (file) {\n      setTweetImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setTweetImage(null);\n      setImagePreview(null);\n    }\n  };\n\n  const createPost = async (content: string) => {\n    setImageOk(true);\n    const firebaseUID = fireAuth.currentUser?.uid;\n    if (!content) {\n      content = \"\";\n    }\n    try {\n      let image_url = \"\";\n      if (tweetImage) {\n        image_url = await uploadImageAndGetUrl(tweetImage);\n      }\n\n      const avatarresponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchAvatar?uid=${firebaseUID}`);\n      const avatarData = await avatarresponse.json();\n      const response = await fetch(\n        \"https://hackathon-ro2txyk6rq-uc.a.run.app/circlepost\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            circleid: circleid,\n            username: profileData?.username,\n            content: content,\n            uid: firebaseUID,\n            like: 0,\n            image: image_url,\n          }),\n        }\n      );\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error(\"Failed to tweet:\", errorData);\n        alert(\"failed to tweet\");\n        return;\n      } else {\n        const newTweet: CircleTweet = {\n          circleid: circleid || \"\",\n          tweetid: \"\",\n          username: profileData?.username || \"\",\n          time: new Date().toISOString(),\n          content: content,\n          uid: firebaseUID || \"\",\n          like: 0,\n          isLiked: false,\n          replyCount: 0,\n          avatar_url: avatarData.avatar_url || \"\",\n          image: image_url || \"\"\n        };\n        setAllTweets(prevTweets => [newTweet, ...prevTweets]);\n        setTweetImage(null);\n        setImagePreview(null);\n        setImageOk(false);\n      }\n    } catch (error) {\n      console.error(\"failed tweet\", error);\n      alert(\"failed tweet\");\n      setImageOk(false);\n    }\n  };\n\n  const formatDateTime = (dateTime: string) => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n\n  if (loading) {\n    return (\n      <Center style={{ height: '100vh' }}>\n        <Loader />\n      </Center>\n    );\n  }\n\n  return (\n    <MantineProvider theme={{ colorScheme: 'light' }}>\n      <AppShell\n        padding=\"md\"\n        header={\n          <Header height={70} p=\"xs\">\n            <Grid justify=\"space-between\" align=\"center\">\n              <Grid.Col span={2}>\n                <Avatar\n                  src={profileData?.avatar || defaultAvatar}\n                  alt=\"Profile\"\n                  size={50}\n                  radius=\"xl\"\n                />\n              </Grid.Col>\n              <Grid.Col span={7}>\n                <Input\n                  type=\"text\"\n                  placeholder=\"ツイートを検索\"\n                  style={{ width: '60%', marginBottom: '20px' }}\n                  icon={<IconSearch size={20} />}\n                />\n              </Grid.Col>\n            </Grid>\n          </Header>\n        }\n      >\n        <Container>\n          {isMember ? (\n            <>\n              {isCreator ? (\n                <Text>あなたはこのサークルの作成者です</Text>\n              ) : (\n                <Button onClick={handleCircleUnregister} color=\"red\">\n                  サークルを脱退\n                </Button>\n              )}\n              <Box\n                sx={{\n                  position: 'fixed',\n                  bottom: 0,\n                  width: '100%',\n                  padding: '10px',\n                  background: 'white',\n                  zIndex: 1,\n                }}\n              >\n                {imagePreview && <Image src={imagePreview} style={{ maxWidth: '30%', height: 'auto' }} alt=\"Profile Preview\" radius=\"md\" />}\n                <Grid>\n                  <Grid.Col span={10}>\n                    <Textarea\n                      placeholder=\"今どうしてる?\"\n                      value={replyContent}\n                      onChange={(e) => setReplyContent(e.currentTarget.value)}\n                      autosize\n                      minRows={2}\n                    />\n                  </Grid.Col>\n                  <Grid.Col span={1}>\n                    <FileInput\n                      onChange={handleImageChange}\n                      accept=\"image/*\"\n                      icon={<IconPhoto size={27} />}\n                      style={{ width: '100%', marginTop: \"10px\" }}\n                    />\n                  </Grid.Col>\n                  <Grid.Col span={1}>\n                    <Button\n                      color='lime'\n                      sx={{ height: 50, fontSize: 20 }}\n                      fullWidth onClick={() => createPost(replyContent)}\n                      disabled={imageOk || (!replyContent && !tweetImage)}\n                    >\n                      Post\n                    </Button>\n                  </Grid.Col>\n                </Grid>\n              </Box>\n              <Divider my=\"sm\" />\n              <ScrollArea style={{ height: '70vh' }}>\n                {allTweets.length > 0 ? (\n                  allTweets.map((tweet: CircleTweet, index: number) => (\n                    <Box key={index} mb=\"lg\" style={{ width: '100%' }}>\n                      <Grid align=\"center\">\n                        <Grid.Col span={1}>\n                          <Avatar src={tweet.avatar_url || defaultAvatar} alt=\"Profile\" size={50} radius=\"xl\" />\n                        </Grid.Col>\n                        <Grid.Col span={11}>\n                          <Text size='lg' weight={700}>{tweet.username}</Text>\n                          <Text size=\"sm\" color=\"gray\">{formatDateTime(tweet.time)}</Text>\n                        </Grid.Col>\n                      </Grid>\n                      <Grid>\n                        <Grid.Col span={12}>\n                          {tweet.image && <Image src={tweet.image} style={{ maxWidth: '100%', marginTop: '10px' }} alt=\"Tweet Image\" />}\n                          <HashtagText text={tweet.content} />\n                        </Grid.Col>\n                      </Grid>\n                      <Grid>\n                        <Grid.Col span={6} sx={{ textAlign: 'center' }}>\n                          <LikeButton\n                            tweetid={tweet.tweetid}\n                            initialLike={tweet.like}\n                            initialIsLiked={tweet.isLiked}\n                            onLikeChange={() => { }}\n                          />\n                        </Grid.Col>\n                        <Grid.Col span={6}>\n                          <ReplyList tweetId={tweet.tweetid} onHashtagsExtracted={() => { }} />\n                          <ReplyForm tweetId={tweet.tweetid} onReplyPosted={() => { }} />\n                        </Grid.Col>\n                      </Grid>\n                      <Divider my=\"sm\" />\n                    </Box>\n                  ))\n                ) : (\n                  <Text>まだツイートがありません</Text>\n                )}\n              </ScrollArea>\n            </>\n          ) : (\n            <Button onClick={handleCircleRegister}>サークルに加入</Button>\n          )}\n        </Container>\n      </AppShell>\n    </MantineProvider>\n  );\n};\n\nexport default CirclePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}