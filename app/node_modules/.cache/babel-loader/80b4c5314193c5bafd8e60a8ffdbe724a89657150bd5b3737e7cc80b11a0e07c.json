{"ast":null,"code":"var _jsxFileName = \"/Users/kaito/hackathon/FE/app/src/Post/Post_App.tsx\",\n  _s = $RefreshSig$();\nimport { fireAuth } from '../firebase.ts';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport \"./Post_App.css\";\nimport defaultAvatar from '../assets/default_user.png';\nimport logo from '../assets/logo.png';\nimport LikeButton, { fetchLikedTweets } from './Like_post.tsx';\nimport ReplyList from './ReplyList.tsx';\nimport ReplyForm from './ReplyForm.tsx';\nimport { MantineProvider, AppShell, Navbar, Header, Text, Input, Avatar, Container, Grid, Button, Center, Box, Textarea, useMantineTheme, Divider, Loader } from '@mantine/core';\nimport { useMediaQuery } from '@mantine/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post_App = () => {\n  _s();\n  const [profileData, setProfileData] = useState(null);\n  const navigate = useNavigate();\n  const theme = useMantineTheme();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [noResults, setNoResults] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [avatarURL, setAvatarURL] = useState(null);\n  const [userLoading, setuserLoading] = useState(null);\n  const [allTweets, setAllTweets] = useState([]);\n  const [likedTweets, setLikedTweets] = useState([]);\n  const [tweetsLoading, setTweetsLoading] = useState(true);\n  const [showReplyForm, setShowReplyForm] = useState(null);\n  const [replyContent, setReplyContent] = useState('');\n  const isMobile = useMediaQuery(`(max-width: ${767}px)`);\n  const isMobilePost = useMediaQuery(`(max-width: ${970}px)`);\n  const [follownumber, setFollowNumber] = useState(0);\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      if (fireAuth.currentUser) {\n        var _fireAuth$currentUser;\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/search?uid=${(_fireAuth$currentUser = fireAuth.currentUser) === null || _fireAuth$currentUser === void 0 ? void 0 : _fireAuth$currentUser.uid}`);\n        const data = await response.json();\n        if (data && data.length > 0) {\n          setProfileData(data[0]);\n        } else {\n          setProfileData(null);\n        }\n      }\n    };\n    const fetchAvatarURL = async () => {\n      try {\n        var _fireAuth$currentUser2;\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchAvatar?uid=${(_fireAuth$currentUser2 = fireAuth.currentUser) === null || _fireAuth$currentUser2 === void 0 ? void 0 : _fireAuth$currentUser2.uid}`);\n        const data = await response.json();\n        if (data.avatar_url !== \"\") {\n          setAvatarURL(`https://hackathon-ro2txyk6rq-uc.a.run.app${data.avatar_url}`);\n        } else {\n          setAvatarURL(defaultAvatar);\n        }\n      } catch (error) {\n        console.error('Failed to fetch avatar URL:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const fetchFollowedTweets = async () => {\n      try {\n        setTweetsLoading(true);\n        if (fireAuth.currentUser) {\n          var _fireAuth$currentUser3;\n          const likedTweetsData = await fetchLikedTweets(fireAuth.currentUser.uid);\n          setLikedTweets(likedTweetsData);\n          const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchfollow?followuser=${(_fireAuth$currentUser3 = fireAuth.currentUser) === null || _fireAuth$currentUser3 === void 0 ? void 0 : _fireAuth$currentUser3.uid}`);\n          const data = await response.json();\n          setFollowNumber(data.length);\n          if (data) {\n            var _fireAuth$currentUser4;\n            const tweets = [];\n            for (let i = 0; i < data.length; i++) {\n              const tweetsResponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${data[i].followeruid}`);\n              const tweetsData = await tweetsResponse.json();\n              tweets.push(...tweetsData.map(tweet => ({\n                tweetid: tweet.tweetid,\n                username: tweet.username,\n                time: tweet.time,\n                content: tweet.content,\n                like: tweet.like,\n                isLiked: likedTweetsData.includes(tweet.tweetid),\n                replyCount: tweet.replyCount || 0\n              })));\n            }\n            const myresponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${(_fireAuth$currentUser4 = fireAuth.currentUser) === null || _fireAuth$currentUser4 === void 0 ? void 0 : _fireAuth$currentUser4.uid}`);\n            const mydata = await myresponse.json();\n            if (mydata) {\n              const myTweets = mydata.map(tweet => ({\n                tweetid: tweet.tweetid,\n                username: tweet.username,\n                time: tweet.time,\n                content: tweet.content,\n                like: tweet.like,\n                isLiked: likedTweetsData.includes(tweet.tweetid),\n                replyCount: tweet.replyCount || 0\n              }));\n              tweets.push(...myTweets);\n            }\n            tweets.sort((a, b) => new Date(b.time).getTime() - new Date(a.time).getTime());\n            setAllTweets(tweets);\n          }\n        }\n      } catch (error) {\n        console.error('Failed to fetch followed tweets:', error);\n      } finally {\n        setTweetsLoading(false); // ツイートの読み込み終了\n      }\n    };\n    fetchUserProfile();\n    fetchAvatarURL();\n    fetchFollowedTweets();\n  }, []);\n  const handleLikeChange = (tweetid, isLiked, likeCount) => {\n    setLikedTweets(prev => isLiked ? [...prev, tweetid] : prev.filter(id => id !== tweetid));\n    setAllTweets(prevTweets => prevTweets.map(tweet => tweet.tweetid === tweetid ? {\n      ...tweet,\n      like: likeCount,\n      isLiked\n    } : tweet));\n  };\n  const debouncedSearch = useCallback(debounce(async query => {\n    if (query.length > 0) {\n      const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchUsers?username=${query}`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setSearchResults(data);\n        setNoResults(false);\n      } else {\n        setSearchResults([]);\n        setNoResults(true);\n      }\n    } else {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, 300), []);\n  useEffect(() => {\n    if (searchTerm === '') {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, [searchTerm]);\n  const createPost = async content => {\n    return new Promise(async (resolve, reject) => {\n      var _fireAuth$currentUser5;\n      const firebaseUID = (_fireAuth$currentUser5 = fireAuth.currentUser) === null || _fireAuth$currentUser5 === void 0 ? void 0 : _fireAuth$currentUser5.uid;\n      let errormessage = \"\";\n      if (!content) {\n        alert(\"tweet is empty\");\n        errormessage = \"tweet is empty\";\n      }\n      if (errormessage) {\n        console.log(errormessage);\n        reject(errormessage);\n        return;\n      }\n      try {\n        const response = await fetch(\"https://hackathon-ro2txyk6rq-uc.a.run.app/post\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: profileData === null || profileData === void 0 ? void 0 : profileData.username,\n            content: content,\n            uid: firebaseUID,\n            like: 0\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error(\"Failed to tweet:\", errorData);\n          alert(\"failed to tweet\");\n          errormessage = \"failed to tweet\";\n          reject(errormessage);\n          return;\n        } else {\n          const newTweet = {\n            tweetid: \"\",\n            username: (profileData === null || profileData === void 0 ? void 0 : profileData.username) || \"\",\n            time: new Date().toISOString(),\n            content: content,\n            like: 0,\n            isLiked: false,\n            replyCount: 0\n          };\n          setAllTweets(prevTweets => [newTweet, ...prevTweets]);\n          resolve();\n        }\n      } catch (error) {\n        console.error(\"failed tweet\", error);\n        alert(\"failed tweet\");\n        reject(error);\n      }\n    });\n  };\n  if (!profileData) {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        size: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        size: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 12\n    }, this);\n  }\n  const handleProfileClick = () => {\n    navigate(\"/profile\");\n  };\n  const handleSearch = async e => {\n    const query = e.target.value;\n    setuserLoading(\"loading\");\n    setSearchTerm(query);\n    debouncedSearch(query);\n    setuserLoading(null);\n  };\n  const formatDateTime = dateTime => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n  const handleUserClick = uid => {\n    navigate(`/userProfile/${uid}`);\n  };\n  return /*#__PURE__*/_jsxDEV(MantineProvider, {\n    theme: {\n      colorScheme: theme.colorScheme\n    },\n    children: /*#__PURE__*/_jsxDEV(AppShell, {\n      padding: \"md\",\n      header: /*#__PURE__*/_jsxDEV(Header, {\n        height: 60,\n        p: \"xs\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          justify: \"space-between\",\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid.Col, {\n            span: 2,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              style: {\n                width: '50px',\n                height: '50px',\n                cursor: 'pointer'\n              },\n              alt: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this),\n      navbar: /*#__PURE__*/_jsxDEV(Navbar, {\n        width: {\n          base: isMobile ? 100 : 300\n        },\n        height: 1000,\n        p: \"xs\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n            span: 4,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: avatarURL || defaultAvatar,\n              alt: \"Profile\",\n              onClick: handleProfileClick,\n              size: isMobile ? 50 : 90,\n              style: {\n                cursor: 'pointer'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              size: \"xl\",\n              weight: 600,\n              sx: {\n                textAlign: \"center\"\n              },\n              children: profileData === null || profileData === void 0 ? void 0 : profileData.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              size: \"s\",\n              weight: 600,\n              sx: {\n                textAlign: \"center\"\n              },\n              children: [\"\\u30D5\\u30A9\\u30ED\\u30FC\\u6570\\uFF1A\", follownumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              mt: \"xs\",\n              children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n                span: 10,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30CD\\u30FC\\u30E0\\u3092\\u691C\\u7D22\",\n                  value: searchTerm,\n                  onChange: handleSearch,\n                  style: {\n                    width: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 15\n              }, this), searchResults.map(user => /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => handleUserClick(user.uid),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n                    span: 4,\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      src: avatarURL,\n                      alt: \"Profile\",\n                      size: 50,\n                      radius: \"xl\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n                    span: 4,\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      weight: 700,\n                      sx: {\n                        marginTop: 15\n                      },\n                      children: user.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this)\n              }, user.uid, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this)), noResults && /*#__PURE__*/_jsxDEV(Text, {\n                weight: 700,\n                children: \"\\u8A72\\u5F53\\u7121\\u3057\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Col, {\n            span: 12,\n            children: tweetsLoading ? /*#__PURE__*/_jsxDEV(Center, {\n              style: {\n                height: '100vh'\n              },\n              children: /*#__PURE__*/_jsxDEV(Loader, {\n                size: \"xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this) : allTweets.map((tweet, index) => /*#__PURE__*/_jsxDEV(Box, {\n              mb: \"lg\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: defaultAvatar,\n                  alt: \"Profile\",\n                  size: isMobile ? 50 : 70,\n                  radius: \"xl\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n                  span: 2,\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    size: \"xl\",\n                    weight: 700,\n                    children: tweet.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n                  span: 9,\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    size: \"md\",\n                    color: \"gray\",\n                    children: formatDateTime(tweet.time)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                children: /*#__PURE__*/_jsxDEV(Grid.Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    size: \"xl\",\n                    weight: 600,\n                    sx: {\n                      textAlign: \"center\"\n                    },\n                    children: tweet.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n                  sx: {\n                    textAlign: 'center'\n                  },\n                  span: 6,\n                  children: /*#__PURE__*/_jsxDEV(LikeButton, {\n                    tweetid: tweet.tweetid,\n                    initialLike: tweet.like,\n                    initialIsLiked: tweet.isLiked,\n                    onLikeChange: handleLikeChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n                  span: 6,\n                  children: [/*#__PURE__*/_jsxDEV(ReplyList, {\n                    tweetId: tweet.tweetid\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 21\n                  }, this), showReplyForm === tweet.tweetid && /*#__PURE__*/_jsxDEV(ReplyForm, {\n                    tweetId: tweet.tweetid,\n                    onReplyPosted: () => setShowReplyForm(null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                my: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'fixed',\n          bottom: 0,\n          width: '60%',\n          padding: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(Textarea, {\n              placeholder: \"What's happening?\",\n              value: replyContent,\n              onChange: e => setReplyContent(e.currentTarget.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n            span: isMobile ? 3 : 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"lime\",\n              sx: {\n                height: isMobilePost ? 40 : 50,\n                fontSize: isMobilePost ? 12 : 20\n              },\n              fullWidth: true,\n              onClick: () => createPost(replyContent),\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(Post_App, \"CL3RqAE2o85uXXpetZ/OGfvsM+k=\", false, function () {\n  return [useNavigate, useMantineTheme, useMediaQuery, useMediaQuery];\n});\n_c = Post_App;\nexport default Post_App;\nvar _c;\n$RefreshReg$(_c, \"Post_App\");","map":{"version":3,"names":["fireAuth","React","useState","useEffect","useCallback","useNavigate","debounce","defaultAvatar","logo","LikeButton","fetchLikedTweets","ReplyList","ReplyForm","MantineProvider","AppShell","Navbar","Header","Text","Input","Avatar","Container","Grid","Button","Center","Box","Textarea","useMantineTheme","Divider","Loader","useMediaQuery","jsxDEV","_jsxDEV","Post_App","_s","profileData","setProfileData","navigate","theme","searchTerm","setSearchTerm","searchResults","setSearchResults","noResults","setNoResults","loading","setLoading","avatarURL","setAvatarURL","userLoading","setuserLoading","allTweets","setAllTweets","likedTweets","setLikedTweets","tweetsLoading","setTweetsLoading","showReplyForm","setShowReplyForm","replyContent","setReplyContent","isMobile","isMobilePost","follownumber","setFollowNumber","fetchUserProfile","currentUser","_fireAuth$currentUser","response","fetch","uid","data","json","length","fetchAvatarURL","_fireAuth$currentUser2","avatar_url","error","console","fetchFollowedTweets","_fireAuth$currentUser3","likedTweetsData","_fireAuth$currentUser4","tweets","i","tweetsResponse","followeruid","tweetsData","push","map","tweet","tweetid","username","time","content","like","isLiked","includes","replyCount","myresponse","mydata","myTweets","sort","a","b","Date","getTime","handleLikeChange","likeCount","prev","filter","id","prevTweets","debouncedSearch","query","createPost","Promise","resolve","reject","_fireAuth$currentUser5","firebaseUID","errormessage","alert","log","method","headers","body","JSON","stringify","ok","errorData","newTweet","toISOString","style","height","children","size","fileName","_jsxFileName","lineNumber","columnNumber","handleProfileClick","handleSearch","e","target","value","formatDateTime","dateTime","date","formattedDate","getFullYear","String","getMonth","padStart","getDate","formattedTime","getHours","getMinutes","getSeconds","handleUserClick","colorScheme","padding","header","p","justify","align","Col","span","src","width","cursor","alt","navbar","base","onClick","weight","sx","textAlign","mt","type","placeholder","onChange","user","radius","marginTop","index","mb","color","initialLike","initialIsLiked","onLikeChange","tweetId","onReplyPosted","my","position","bottom","currentTarget","fontSize","fullWidth","_c","$RefreshReg$"],"sources":["/Users/kaito/hackathon/FE/app/src/Post/Post_App.tsx"],"sourcesContent":["import { fireAuth } from '../firebase.ts';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Contentform from './Newpost.tsx';\nimport { useNavigate } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport \"./Post_App.css\";\nimport defaultAvatar from '../assets/default_user.png';\nimport logo from '../assets/logo.png';\nimport LikeButton, { fetchLikedTweets } from './Like_post.tsx';\nimport ReplyList from './ReplyList.tsx';\nimport ReplyForm from './ReplyForm.tsx';\nimport { MantineProvider, AppShell, Navbar, Header, Text, Input, Avatar, Container, Grid, Button, Center, Box, Textarea, useMantineTheme, Divider, Loader} from '@mantine/core';\nimport { useMediaQuery } from '@mantine/hooks';\n\ninterface Tweet {\n  tweetid: string;\n  username: string;\n  time: string;\n  content: string;\n  like: number;\n  isLiked: boolean;\n  replyCount: number;\n}\n\nconst Post_App: React.FC = () => {\n  const [profileData, setProfileData] = useState<{ name: string; age: number; username: string; avatar_url: string;} | null>(null);\n  const navigate = useNavigate();\n  const theme = useMantineTheme();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<any[]>([]);\n  const [noResults, setNoResults] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [avatarURL, setAvatarURL] = useState<string | null>(null);\n  const [userLoading, setuserLoading] = useState<string | null>(null);\n  const [allTweets, setAllTweets] = useState<Tweet[]>([]);\n  const [likedTweets, setLikedTweets] = useState<string[]>([]);\n  const [tweetsLoading, setTweetsLoading] = useState<boolean>(true);\n  const [showReplyForm, setShowReplyForm] = useState<string | null>(null);\n  const [replyContent, setReplyContent] = useState<string>('');\n  const isMobile = useMediaQuery(`(max-width: ${767}px)`);\n  const isMobilePost = useMediaQuery(`(max-width: ${970}px)`);\n  const [follownumber, setFollowNumber] = useState<number | null>(0)\n\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      if (fireAuth.currentUser) {\n        const response = await fetch(\n          `https://hackathon-ro2txyk6rq-uc.a.run.app/search?uid=${fireAuth.currentUser?.uid}`\n        );\n        const data = await response.json();\n        if (data && data.length > 0) {\n          setProfileData(data[0]);\n        } else {\n          setProfileData(null);\n        }\n      }\n    };\n\n    const fetchAvatarURL = async () => {\n      try {\n        const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchAvatar?uid=${fireAuth.currentUser?.uid}`);\n        const data = await response.json();\n        if (data.avatar_url !== \"\"){\n          setAvatarURL(`https://hackathon-ro2txyk6rq-uc.a.run.app${data.avatar_url}`);\n        } else {\n          setAvatarURL(defaultAvatar);\n        }\n      } catch (error) {\n        console.error('Failed to fetch avatar URL:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchFollowedTweets = async () => {\n      try {\n        setTweetsLoading(true);\n        if (fireAuth.currentUser) {\n          const likedTweetsData = await fetchLikedTweets(fireAuth.currentUser.uid);\n          setLikedTweets(likedTweetsData);\n\n          const response = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/searchfollow?followuser=${fireAuth.currentUser?.uid}`);\n          const data = await response.json();\n          setFollowNumber(data.length)\n          if (data) {\n            const tweets: Tweet[] = [];\n            for (let i = 0; i < data.length; i++) {\n              const tweetsResponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${data[i].followeruid}`);\n              const tweetsData = await tweetsResponse.json();\n              tweets.push(...tweetsData.map((tweet: any) => ({\n                tweetid: tweet.tweetid,\n                username: tweet.username,\n                time: tweet.time,\n                content: tweet.content,\n                like: tweet.like,\n                isLiked: likedTweetsData.includes(tweet.tweetid),\n                replyCount: tweet.replyCount || 0,\n              })));\n            }\n            const myresponse = await fetch(`https://hackathon-ro2txyk6rq-uc.a.run.app/mytweet?uid=${fireAuth.currentUser?.uid}`);\n            const mydata = await myresponse.json();\n            if (mydata) {\n              const myTweets = mydata.map((tweet: any) => ({\n                tweetid: tweet.tweetid,\n                username: tweet.username,\n                time: tweet.time,\n                content: tweet.content,\n                like: tweet.like,\n                isLiked: likedTweetsData.includes(tweet.tweetid),\n                replyCount: tweet.replyCount || 0,\n              }));\n              tweets.push(...myTweets);\n            }\n            tweets.sort((a, b) => new Date(b.time).getTime() - new Date(a.time).getTime());\n            setAllTweets(tweets);\n          }\n        }\n      } catch (error) {\n        console.error('Failed to fetch followed tweets:', error);\n      }finally {\n        setTweetsLoading(false); // ツイートの読み込み終了\n      }\n    };\n\n    fetchUserProfile();\n    fetchAvatarURL();\n    fetchFollowedTweets();\n  }, []);\n\n  const handleLikeChange = (tweetid: string, isLiked: boolean, likeCount: number) => {\n    setLikedTweets(prev => isLiked ? [...prev, tweetid] : prev.filter(id => id !== tweetid));\n    setAllTweets(prevTweets =>\n      prevTweets.map(tweet =>\n        tweet.tweetid === tweetid ? { ...tweet, like: likeCount, isLiked } : tweet\n      )\n    );\n  };\n\n  const debouncedSearch = useCallback(debounce(async (query: string) => {\n    if (query.length > 0) {\n      const response = await fetch(\n        `https://hackathon-ro2txyk6rq-uc.a.run.app/searchUsers?username=${query}`\n      );\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setSearchResults(data);\n        setNoResults(false);\n      } else {\n        setSearchResults([]);\n        setNoResults(true);\n      }\n    } else {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, 300), []);\n\n  useEffect(() => {\n    if (searchTerm === '') {\n      setSearchResults([]);\n      setNoResults(false);\n    }\n  }, [searchTerm]);\n\n  const createPost = async (content: string) => {\n    return new Promise<void>(async (resolve, reject) => {\n      const firebaseUID = fireAuth.currentUser?.uid;\n      let errormessage = \"\";\n      if (!content) {\n        alert(\"tweet is empty\");\n        errormessage = \"tweet is empty\";\n      }\n      if (errormessage) {\n        console.log(errormessage);\n        reject(errormessage);\n        return;\n      }\n      try {\n        const response = await fetch(\n          \"https://hackathon-ro2txyk6rq-uc.a.run.app/post\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              username: profileData?.username,\n              content: content,\n              uid: firebaseUID,\n              like: 0,\n            }),\n          }\n        );\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error(\"Failed to tweet:\", errorData);\n          alert(\"failed to tweet\");\n          errormessage = \"failed to tweet\";\n          reject(errormessage);\n          return;\n        } else {\n          const newTweet = {\n            tweetid: \"\",\n            username: profileData?.username || \"\",\n            time: new Date().toISOString(),\n            content: content,\n            like: 0,\n            isLiked: false,\n            replyCount: 0,\n          };\n          setAllTweets(prevTweets => [newTweet, ...prevTweets]);\n          resolve();\n        }\n      } catch (error) {\n        console.error(\"failed tweet\", error);\n        alert(\"failed tweet\");\n        reject(error);\n      }\n    });\n  };\n\n  if (!profileData) {\n    return <Center style={{ height: '100vh' }}>\n              <Loader size=\"xl\" />\n            </Center>\n  }\n\n  if (loading) {\n    return <Center style={{ height: '100vh' }}>\n              <Loader size=\"xl\" />\n          </Center>\n  }\n\n  const handleProfileClick = () => {\n    navigate(\"/profile\");\n  };\n\n  const handleSearch = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const query = e.target.value;\n    setuserLoading(\"loading\");\n    setSearchTerm(query);\n    debouncedSearch(query);\n    setuserLoading(null);\n  };\n\n  const formatDateTime = (dateTime: string) => {\n    const date = new Date(dateTime);\n    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    const formattedTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n\n  const handleUserClick = (uid: string) => {\n    navigate(`/userProfile/${uid}`);\n  };\n\n  return (\n    <MantineProvider theme={{ colorScheme: theme.colorScheme }}>\n      <AppShell\n        padding=\"md\"\n        header={\n          <Header height={60} p=\"xs\">\n            <Grid justify=\"space-between\" align=\"center\">\n              <Grid.Col span={2}>\n                <img src={logo} style={{ width: '50px', height: '50px', cursor: 'pointer' }} alt=\"logo\" />\n              </Grid.Col>\n            </Grid>\n          </Header>\n        }\n        navbar={\n          <Navbar width={{ base: isMobile ? 100 : 300 }} height={1000} p=\"xs\">\n          <Grid>\n            <Grid.Col span={4}>\n              <Avatar\n                src={avatarURL || defaultAvatar}\n                alt=\"Profile\"\n                onClick={handleProfileClick}\n                size={isMobile ? 50: 90}\n                style={{ cursor: 'pointer' }}\n              />\n              <Text size='xl' weight={600} sx={{textAlign: \"center\"}}>{profileData?.username}</Text>\n              <Text size='s' weight={600} sx={{textAlign: \"center\"}}>フォロー数：{follownumber}</Text>\n            </Grid.Col>\n            <Grid.Col span={8}>\n            <Box mt=\"xs\">\n              <Grid.Col span={10}>\n                <Input\n                  type=\"text\"\n                  placeholder=\"ユーザーネームを検索\"\n                  value={searchTerm}\n                  onChange={handleSearch}\n                  style={{ width: '100%' }}\n                />\n              </Grid.Col>\n                {searchResults.map(user => (\n                  <Box key={user.uid} onClick={() => handleUserClick(user.uid)} style={{ cursor: 'pointer' }}>\n                    <Grid>\n                    <Grid.Col span={4}>\n                    <Avatar src={avatarURL} alt=\"Profile\" size={50} radius=\"xl\">\n                    </Avatar>\n                    </Grid.Col>\n                    <Grid.Col span={4}>\n                    <Text\n                    weight={700}\n                    sx={{\n                    marginTop: 15}}\n                    >\n                      {user.username}\n                      </Text>\n                    </Grid.Col>\n                    </Grid>\n                  </Box>\n                ))}\n                {noResults && <Text weight={700}>該当無し</Text>}\n              </Box>\n            </Grid.Col>\n          </Grid>\n        </Navbar>\n        }\n      >\n        <Container>\n          <Grid>\n            <Grid.Col span={12}>\n              {tweetsLoading ? (\n                <Center style={{ height: '100vh' }}>\n                  <Loader size=\"xl\" />\n                </Center>\n              ) : (\n                allTweets.map((tweet: Tweet, index: number) => (\n                  <Box key={index} mb=\"lg\">\n                    <Grid>\n                      <Avatar src={defaultAvatar} alt=\"Profile\" size={isMobile ? 50: 70} radius=\"xl\" />\n                      <Grid.Col span={2}>\n                        <Text size='xl' weight={700}>{tweet.username}</Text>\n                      </Grid.Col>\n                      <Grid.Col span={9}>\n                        <Text size=\"md\" color=\"gray\">{formatDateTime(tweet.time)}</Text>\n                      </Grid.Col>\n                      </Grid>\n\n                      <Grid>\n                      <Grid.Col span={8}>\n                        <Text size=\"xl\" weight={600}\n                        sx={{textAlign: \"center\"}}>\n                          {tweet.content}\n                          </Text>\n                      </Grid.Col>\n                    </Grid>\n\n                    <Grid>\n                    <Grid.Col\n                    sx={{textAlign: 'center'}}\n                    span={6}>\n                        <LikeButton\n                          tweetid={tweet.tweetid}\n                          initialLike={tweet.like}\n                          initialIsLiked={tweet.isLiked}\n                          onLikeChange={handleLikeChange}\n                        />\n                      </Grid.Col>\n                      <Grid.Col span={6}>\n                    <ReplyList tweetId={tweet.tweetid} />\n                    {showReplyForm === tweet.tweetid && (\n                      <ReplyForm\n                        tweetId={tweet.tweetid}\n                        onReplyPosted={() => setShowReplyForm(null)}\n                      />\n                    )}\n                    </Grid.Col>\n                    </Grid>\n                    <Divider my=\"sm\" />\n                  </Box>\n                ))\n              )}\n            </Grid.Col>\n          </Grid>\n        </Container>\n        <Box\n        sx={{\n          position: 'fixed',\n          bottom: 0,\n          width: '60%',\n          padding: '10px',\n        }}>\n          <Grid>\n            <Grid.Col span={8}>\n              <Textarea\n                placeholder=\"What's happening?\"\n                value={replyContent}\n                onChange={(e) => setReplyContent(e.currentTarget.value)}\n              />\n            </Grid.Col>\n            <Grid.Col span={isMobile ? 3:2}>\n              <Button\n              color='lime'\n              sx={{height: isMobilePost ? 40:50,fontSize: isMobilePost ? 12: 20}}\n              fullWidth onClick={() => createPost(replyContent)}>\n                Post\n              </Button>\n            </Grid.Col>\n          </Grid>\n        </Box>\n      </AppShell>\n    </MantineProvider>\n  );\n};\n\nexport default Post_App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}